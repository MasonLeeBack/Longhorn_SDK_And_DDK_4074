//===========================================================================
//
// Copyright (c) Microsoft Corporation. All rights reserved.
//
//===========================================================================


#ifndef _INC_PROPKEY
#define _INC_PROPKEY

#ifndef DEFINE_API_PKEY
#define DEFINE_API_PKEY(name, managed_name, l, w1, w2, b1, b2, b3, b4, b5, b6, b7, b8, pid) \
        DEFINE_PROPERTYKEY(name, l, w1, w2, b1, b2, b3, b4, b5, b6, b7, b8, pid)
#endif

#include <propkeydef.h>

#ifndef _WIN32_IE
#define _WIN32_IE 0x0501
#else
#if (_WIN32_IE < 0x0400) && defined(_WIN32_WINNT) && (_WIN32_WINNT >= 0x0500)
#error _WIN32_IE setting conflicts with _WIN32_WINNT setting
#endif
#endif

DEFINE_API_PKEY(PKEY_NULL,             Null            , 0x00000000L, 0x0000, 0x0000, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00000000L);

// FMTID_SummaryInformation {0xf29f85e0L, 0x4ff9, 0x1068, 0xab, 0x91, 0x08, 0x00, 0x2b, 0x27, 0xb3, 0xd9}
// See propidl.idl for PIDSI_ values for these. TODO: Update types with correct information - these types are not correct (especially strings, which are now unicode)
DEFINE_API_PKEY(PKEY_Title,            Title           , 0xf29f85e0L, 0x4ff9, 0x1068, 0xab, 0x91, 0x08, 0x00, 0x2b, 0x27, 0xb3, 0xd9, 0x00000002L); // PIDSI_TITLE         VT_LPSTR
DEFINE_API_PKEY(PKEY_Subject,          Subject         , 0xf29f85e0L, 0x4ff9, 0x1068, 0xab, 0x91, 0x08, 0x00, 0x2b, 0x27, 0xb3, 0xd9, 0x00000003L); // PIDSI_SUBJECT       VT_LPSTR
DEFINE_API_PKEY(PKEY_Author,           Author          , 0xf29f85e0L, 0x4ff9, 0x1068, 0xab, 0x91, 0x08, 0x00, 0x2b, 0x27, 0xb3, 0xd9, 0x00000004L); // PIDSI_AUTHOR        VT_LPSTR
DEFINE_API_PKEY(PKEY_Keywords,         Keywords        , 0xf29f85e0L, 0x4ff9, 0x1068, 0xab, 0x91, 0x08, 0x00, 0x2b, 0x27, 0xb3, 0xd9, 0x00000005L); // PIDSI_KEYWORDS      VT_LPSTR
DEFINE_API_PKEY(PKEY_Comment,          Comment         , 0xf29f85e0L, 0x4ff9, 0x1068, 0xab, 0x91, 0x08, 0x00, 0x2b, 0x27, 0xb3, 0xd9, 0x00000006L); // PIDSI_COMMENTS      VT_LPSTR
DEFINE_API_PKEY(PKEY_Template,         Template        , 0xf29f85e0L, 0x4ff9, 0x1068, 0xab, 0x91, 0x08, 0x00, 0x2b, 0x27, 0xb3, 0xd9, 0x00000007L); // PIDSI_TEMPLATE      VT_LPSTR
DEFINE_API_PKEY(PKEY_LastAuthor,       LastAuthor      , 0xf29f85e0L, 0x4ff9, 0x1068, 0xab, 0x91, 0x08, 0x00, 0x2b, 0x27, 0xb3, 0xd9, 0x00000008L); // PIDSI_LASTAUTHOR    VT_LPSTR
DEFINE_API_PKEY(PKEY_RevNumber,        RevNumber       , 0xf29f85e0L, 0x4ff9, 0x1068, 0xab, 0x91, 0x08, 0x00, 0x2b, 0x27, 0xb3, 0xd9, 0x00000009L); // PIDSI_REVNUMBER     VT_LPSTR
DEFINE_API_PKEY(PKEY_EditTime,         EditTime        , 0xf29f85e0L, 0x4ff9, 0x1068, 0xab, 0x91, 0x08, 0x00, 0x2b, 0x27, 0xb3, 0xd9, 0x0000000aL); // PIDSI_EDITTIME      VT_FILETIME (UTC)
DEFINE_API_PKEY(PKEY_LastPrinted,      LastPrinted     , 0xf29f85e0L, 0x4ff9, 0x1068, 0xab, 0x91, 0x08, 0x00, 0x2b, 0x27, 0xb3, 0xd9, 0x0000000bL); // PIDSI_LASTPRINTED   VT_FILETIME (UTC)
DEFINE_API_PKEY(PKEY_DocCreated,       DocCreated      , 0xf29f85e0L, 0x4ff9, 0x1068, 0xab, 0x91, 0x08, 0x00, 0x2b, 0x27, 0xb3, 0xd9, 0x0000000cL); // PIDSI_CREATE_DTM    VT_FILETIME (UTC) -- in the doc, not file system
DEFINE_API_PKEY(PKEY_LastSaveDTM,      LastSaveTime    , 0xf29f85e0L, 0x4ff9, 0x1068, 0xab, 0x91, 0x08, 0x00, 0x2b, 0x27, 0xb3, 0xd9, 0x0000000dL); // PIDSI_LASTSAVE_DTM  VT_FILETIME (UTC)
DEFINE_API_PKEY(PKEY_PageCount,        PageCount       , 0xf29f85e0L, 0x4ff9, 0x1068, 0xab, 0x91, 0x08, 0x00, 0x2b, 0x27, 0xb3, 0xd9, 0x0000000eL); // PIDSI_PAGECOUNT     VT_I4
DEFINE_API_PKEY(PKEY_WordCount,        WordCount       , 0xf29f85e0L, 0x4ff9, 0x1068, 0xab, 0x91, 0x08, 0x00, 0x2b, 0x27, 0xb3, 0xd9, 0x0000000fL); // PIDSI_WORDCOUNT     VT_I4
DEFINE_API_PKEY(PKEY_CharCount,        CharCount       , 0xf29f85e0L, 0x4ff9, 0x1068, 0xab, 0x91, 0x08, 0x00, 0x2b, 0x27, 0xb3, 0xd9, 0x00000010L); // PIDSI_CHARCOUNT     VT_I4
DEFINE_API_PKEY(PKEY_Thumbnail,        Thumbnail       , 0xf29f85e0L, 0x4ff9, 0x1068, 0xab, 0x91, 0x08, 0x00, 0x2b, 0x27, 0xb3, 0xd9, 0x00000011L); // PIDSI_THUMBNAIL     VT_CF
DEFINE_API_PKEY(PKEY_AppName,          AppName         , 0xf29f85e0L, 0x4ff9, 0x1068, 0xab, 0x91, 0x08, 0x00, 0x2b, 0x27, 0xb3, 0xd9, 0x00000012L); // PIDSI_APPNAME       VT_LPSTR

// FMTID_DocumentSummaryInformation {0xd5cdd502L, 0x2e9c, 0x101b, 0x93, 0x97, 0x08, 0x00, 0x2b, 0x2c, 0xf9, 0xae}
// See OLE docs for the PIDDSI_ values for these
DEFINE_API_PKEY(PKEY_Category,         Category        , 0xd5cdd502L, 0x2e9c, 0x101b, 0x93, 0x97, 0x08, 0x00, 0x2b, 0x2c, 0xf9, 0xae, 0x00000002); // PIDDSI_CATEGORY      VT_LPSTR
DEFINE_API_PKEY(PKEY_PresFormat,       PresFormat      , 0xd5cdd502L, 0x2e9c, 0x101b, 0x93, 0x97, 0x08, 0x00, 0x2b, 0x2c, 0xf9, 0xae, 0x00000003); // PIDDSI_PRESFORMAT    VT_LPSTR
DEFINE_API_PKEY(PKEY_ByteCount,        ByteCount       , 0xd5cdd502L, 0x2e9c, 0x101b, 0x93, 0x97, 0x08, 0x00, 0x2b, 0x2c, 0xf9, 0xae, 0x00000004); // PIDDSI_BYTECOUNT     VT_I4
DEFINE_API_PKEY(PKEY_LineCount,        LineCount       , 0xd5cdd502L, 0x2e9c, 0x101b, 0x93, 0x97, 0x08, 0x00, 0x2b, 0x2c, 0xf9, 0xae, 0x00000005); // PIDDSI_LINECOUNT     VT_I4
DEFINE_API_PKEY(PKEY_ParagraphCount,   ParagraphCount  , 0xd5cdd502L, 0x2e9c, 0x101b, 0x93, 0x97, 0x08, 0x00, 0x2b, 0x2c, 0xf9, 0xae, 0x00000006); // PIDDSI_PARCOUNT      VT_I4
DEFINE_API_PKEY(PKEY_SlideCount,       SlideCount      , 0xd5cdd502L, 0x2e9c, 0x101b, 0x93, 0x97, 0x08, 0x00, 0x2b, 0x2c, 0xf9, 0xae, 0x00000007); // PIDDSI_SLIDECOUNT    VT_I4
DEFINE_API_PKEY(PKEY_NoteCount,        NoteCount       , 0xd5cdd502L, 0x2e9c, 0x101b, 0x93, 0x97, 0x08, 0x00, 0x2b, 0x2c, 0xf9, 0xae, 0x00000008); // PIDDSI_NOTECOUNT     VT_I4
DEFINE_API_PKEY(PKEY_HiddenCount,      HiddenCount     , 0xd5cdd502L, 0x2e9c, 0x101b, 0x93, 0x97, 0x08, 0x00, 0x2b, 0x2c, 0xf9, 0xae, 0x00000009); // PIDDSI_HIDDENCOUNT   VT_I4
DEFINE_API_PKEY(PKEY_MMClipCount,      MMClipCount     , 0xd5cdd502L, 0x2e9c, 0x101b, 0x93, 0x97, 0x08, 0x00, 0x2b, 0x2c, 0xf9, 0xae, 0x0000000A); // PIDDSI_MMCLIPCOUNT   VT_I4
DEFINE_API_PKEY(PKEY_Scale,            Scale           , 0xd5cdd502L, 0x2e9c, 0x101b, 0x93, 0x97, 0x08, 0x00, 0x2b, 0x2c, 0xf9, 0xae, 0x0000000B); // PIDDSI_SCALE         VT_BOOL
DEFINE_API_PKEY(PKEY_Manager,          Manager         , 0xd5cdd502L, 0x2e9c, 0x101b, 0x93, 0x97, 0x08, 0x00, 0x2b, 0x2c, 0xf9, 0xae, 0x0000000E); // PIDDSI_MANAGER       VT_LPSTR
DEFINE_API_PKEY(PKEY_CompanyName,      CompanyName     , 0xd5cdd502L, 0x2e9c, 0x101b, 0x93, 0x97, 0x08, 0x00, 0x2b, 0x2c, 0xf9, 0xae, 0x0000000F); // PIDDSI_COMPANY       VT_LPSTR
DEFINE_API_PKEY(PKEY_LinksDirty,       LinksDirty      , 0xd5cdd502L, 0x2e9c, 0x101b, 0x93, 0x97, 0x08, 0x00, 0x2b, 0x2c, 0xf9, 0xae, 0x00000010); // PIDDSI_LINKSDIRTY    VT_BOOL

// FMTID_Storage 0xb725f130, 0x47ef, 0x101a, 0xa5, 0xf1, 0x02, 0x60, 0x8c, 0x9e, 0xeb, 0xac
// PID_STG_* are defined in ntquery.h
DEFINE_API_PKEY(PKEY_DIRECTORY,        Directory       , 0xb725f130L, 0x47ef, 0x101a, 0xa5, 0xf1, 0x02, 0x60, 0x8c, 0x9e, 0xeb, 0xac, 2); // PID_STG_DIRECTORY
DEFINE_API_PKEY(PKEY_TYPE,             Type            , 0xb725f130L, 0x47ef, 0x101a, 0xa5, 0xf1, 0x02, 0x60, 0x8c, 0x9e, 0xeb, 0xac, 4); // PID_STG_STORAGETYPE
DEFINE_API_PKEY(PKEY_FILEINDEX,        FileIndex       , 0xb725f130L, 0x47ef, 0x101a, 0xa5, 0xf1, 0x02, 0x60, 0x8c, 0x9e, 0xeb, 0xac, 8); // PID_STG_FILEINDEX
DEFINE_API_PKEY(PKEY_NAME,             Name            , 0xb725f130L, 0x47ef, 0x101a, 0xa5, 0xf1, 0x02, 0x60, 0x8c, 0x9e, 0xeb, 0xac, 10); // PID_STG_NAME
DEFINE_API_PKEY(PKEY_SIZE,             Size            , 0xb725f130L, 0x47ef, 0x101a, 0xa5, 0xf1, 0x02, 0x60, 0x8c, 0x9e, 0xeb, 0xac, 12); // PID_STG_SIZE
DEFINE_API_PKEY(PKEY_ATTRIBUTES,       Attributes      , 0xb725f130L, 0x47ef, 0x101a, 0xa5, 0xf1, 0x02, 0x60, 0x8c, 0x9e, 0xeb, 0xac, 13); // PID_STG_ATTRIBUTES
DEFINE_API_PKEY(PKEY_WRITETIME,        WriteTime       , 0xb725f130L, 0x47ef, 0x101a, 0xa5, 0xf1, 0x02, 0x60, 0x8c, 0x9e, 0xeb, 0xac, 14); // PID_STG_WRITETIME
DEFINE_API_PKEY(PKEY_CREATETIME,       CreateTime      , 0xb725f130L, 0x47ef, 0x101a, 0xa5, 0xf1, 0x02, 0x60, 0x8c, 0x9e, 0xeb, 0xac, 15); // PID_STG_CREATETIME
DEFINE_API_PKEY(PKEY_ACCESSTIME,       AccessTime      , 0xb725f130L, 0x47ef, 0x101a, 0xa5, 0xf1, 0x02, 0x60, 0x8c, 0x9e, 0xeb, 0xac, 16); // PID_STG_ACCESSTIME
DEFINE_API_PKEY(PKEY_ALLOCSIZE,        AllocSize       , 0xb725f130L, 0x47ef, 0x101a, 0xa5, 0xf1, 0x02, 0x60, 0x8c, 0x9e, 0xeb, 0xac, 18); // PID_STG_ALLOCSIZE

// Filesystem Volume Properties {0x9b174b35L, 0x40ff, 0x11d2, 0xa2, 0x7e, 0x0, 0xc0, 0x4f, 0xc3, 0x8, 0x71}
// Was FMTID_Volume
DEFINE_API_PKEY(PKEY_FREESPACE,        FreeSpace       , 0x9b174b35L, 0x40ff, 0x11d2, 0xa2, 0x7e, 0x0, 0xc0, 0x4f, 0xc3, 0x8, 0x71, 2); // PID_VOLUME_FREE
DEFINE_API_PKEY(PKEY_CAPACITY,         Capacity        , 0x9b174b35L, 0x40ff, 0x11d2, 0xa2, 0x7e, 0x0, 0xc0, 0x4f, 0xc3, 0x8, 0x71, 3); // PID_VOLUME_CAPACITY
DEFINE_API_PKEY(PKEY_FILESYSTEM,       FileSystem      , 0x9b174b35L, 0x40ff, 0x11d2, 0xa2, 0x7e, 0x0, 0xc0, 0x4f, 0xc3, 0x8, 0x71, 4); // PID_VOLUME_FILESYSTEM
DEFINE_API_PKEY(PKEY_PERCENTFULL,      PercentFull     , 0x9b174b35L, 0x40ff, 0x11d2, 0xa2, 0x7e, 0x0, 0xc0, 0x4f, 0xc3, 0x8, 0x71, 5); // PID_VOLUME_PERCENTFULL
DEFINE_API_PKEY(PKEY_ISVOLUMEROOT,     IsVolumeRoot    , 0x9b174b35L, 0x40ff, 0x11d2, 0xa2, 0x7e, 0x0, 0xc0, 0x4f, 0xc3, 0x8, 0x71, 10);

// "Displaced" properties (TODO: Get description of this grouping (was FMTID_Displaced)
DEFINE_API_PKEY(PKEY_DELETEDFROM,      DeletedFrom     , 0x9b174b33, 0x40ff, 0x11d2, 0xa2, 0x7e, 0x0, 0xc0, 0x4f, 0xc3, 0x8, 0x71, 2); // PID_DISPLACED_FROM
DEFINE_API_PKEY(PKEY_DATEDELETED,      DateDeleted     , 0x9b174b33, 0x40ff, 0x11d2, 0xa2, 0x7e, 0x0, 0xc0, 0x4f, 0xc3, 0x8, 0x71, 3); // PID_DISPLACED_DATE

// Briefcase properties (was FMTID_Briefcase) {0x328d8b21, 0x7729, 0x4bfc, 0x95, 0x4c, 0x90, 0x2b, 0x32, 0x9d, 0x56, 0xb0}
DEFINE_API_PKEY(PKEY_SYNCCOPYIN,       SyncCopyIn      , 0x328d8b21, 0x7729, 0x4bfc, 0x95, 0x4c, 0x90, 0x2b, 0x32, 0x9d, 0x56, 0xb0, 2); // PID_SYNC_COPY_IN

// Ink Title properties
DEFINE_API_PKEY(PKEY_InkTitle,         InkTitle        , 0x1d75d720, 0xbe80, 0x4368, 0xb0, 0x1f, 0x61, 0xad, 0xf2, 0x21, 0xa8, 0x4f, 36); // PKEY_InkTitle

// Query relevancy properties (was FMTID_Query) {0x49691c90, 0x7e17, 0x101a, 0xa9, 0x1c, 0x08, 0x00, 0x2b, 0x2e ,0xcd, 0xa9}
DEFINE_API_PKEY(PKEY_RANK,             Rank            , 0x49691c90, 0x7e17, 0x101a, 0xa9, 0x1c, 0x08, 0x00, 0x2b, 0x2e, 0xcd, 0xa9, 2); // PID_QUERY_RANK

// Shell Details {0x28636aa6, 0x953d, 0x11d2, 0xb5, 0xd6, 0x0, 0xc0, 0x4f, 0xd9, 0x18, 0xd0}
DEFINE_API_PKEY(PKEY_FINDDATA,         FindData        , 0x28636aa6, 0x953d, 0x11d2, 0xb5, 0xd6, 0x0, 0xc0, 0x4f, 0xd9, 0x18, 0xd0, PID_FIRST_USABLE);         // PID_FINDDATA
DEFINE_API_PKEY(PKEY_NETRESOURCE,      Netresource     , 0x28636aa6, 0x953d, 0x11d2, 0xb5, 0xd6, 0x0, 0xc0, 0x4f, 0xd9, 0x18, 0xd0, PID_FIRST_USABLE + 1);     // PID_NETRESOURCE
DEFINE_API_PKEY(PKEY_DESCRIPTIONID,    DescriptionId   , 0x28636aa6, 0x953d, 0x11d2, 0xb5, 0xd6, 0x0, 0xc0, 0x4f, 0xd9, 0x18, 0xd0, PID_FIRST_USABLE + 2);     // PID_DESCRIPTIONID
DEFINE_API_PKEY(PKEY_WHICHFOLDER,      WhichFolder     , 0x28636aa6, 0x953d, 0x11d2, 0xb5, 0xd6, 0x0, 0xc0, 0x4f, 0xd9, 0x18, 0xd0, PID_FIRST_USABLE + 3);     // PID_WHICHFOLDER
DEFINE_API_PKEY(PKEY_NETWORKLOCATION,  NetworkLocation , 0x28636aa6, 0x953d, 0x11d2, 0xb5, 0xd6, 0x0, 0xc0, 0x4f, 0xd9, 0x18, 0xd0, PID_FIRST_USABLE + 4);     // PID_NETWORKLOCATION
DEFINE_API_PKEY(PKEY_COMPUTERNAME,     Computername    , 0x28636aa6, 0x953d, 0x11d2, 0xb5, 0xd6, 0x0, 0xc0, 0x4f, 0xd9, 0x18, 0xd0, PID_FIRST_USABLE + 5);     // PID_COMPUTERNAME
DEFINE_API_PKEY(PKEY_DISPLAYPATH,      DisplayPath     , 0x28636aa6, 0x953d, 0x11d2, 0xb5, 0xd6, 0x0, 0xc0, 0x4f, 0xd9, 0x18, 0xd0, PID_FIRST_USABLE + 6);     // PID_DISPLAYPATH
DEFINE_API_PKEY(PKEY_PERCEIVEDTYPE,    PerceivedType   , 0x28636aa6, 0x953d, 0x11d2, 0xb5, 0xd6, 0x0, 0xc0, 0x4f, 0xd9, 0x18, 0xd0, PID_FIRST_USABLE + 7);     // PID_PERCEIVEDTYPE
DEFINE_API_PKEY(PKEY_CACHEINSTANCE,    Cacheinstance   , 0x28636aa6, 0x953d, 0x11d2, 0xb5, 0xd6, 0x0, 0xc0, 0x4f, 0xd9, 0x18, 0xd0, PID_FIRST_USABLE + 8);     // PID_CACHEINSTANCE
DEFINE_API_PKEY(PKEY_CANONICALTYPE,    CanonicalType   , 0x28636aa6, 0x953d, 0x11d2, 0xb5, 0xd6, 0x0, 0xc0, 0x4f, 0xd9, 0x18, 0xd0, PID_FIRST_USABLE + 9);     // PID_CANONICALTYPE
DEFINE_API_PKEY(PKEY_FILECOUNT,        FileCount       , 0x28636aa6, 0x953d, 0x11d2, 0xb5, 0xd6, 0x0, 0xc0, 0x4f, 0xd9, 0x18, 0xd0, PID_FIRST_USABLE + 10);    // PID_FILECOUNT
DEFINE_API_PKEY(PKEY_RECENTFILECOUNT,  RecentfileCount , 0x28636aa6, 0x953d, 0x11d2, 0xb5, 0xd6, 0x0, 0xc0, 0x4f, 0xd9, 0x18, 0xd0, PID_FIRST_USABLE + 11);    // PID_RECENTFILECOUNT
DEFINE_API_PKEY(PKEY_TotalFileSize,    TotalFileSize   , 0x28636aa6, 0x953d, 0x11d2, 0xb5, 0xd6, 0x0, 0xc0, 0x4f, 0xd9, 0x18, 0xd0, PID_FIRST_USABLE + 12);    // PID_TOTALFILESIZE
DEFINE_API_PKEY(PKEY_YEAR,             Year            , 0x28636aa6, 0x953d, 0x11d2, 0xb5, 0xd6, 0x0, 0xc0, 0x4f, 0xd9, 0x18, 0xd0, PID_FIRST_USABLE + 13);    // PID_YEAR
DEFINE_API_PKEY(PKEY_MONTH,            Month           , 0x28636aa6, 0x953d, 0x11d2, 0xb5, 0xd6, 0x0, 0xc0, 0x4f, 0xd9, 0x18, 0xd0, PID_FIRST_USABLE + 14);    // PID_MONTH
DEFINE_API_PKEY(PKEY_WEEK,             Week            , 0x28636aa6, 0x953d, 0x11d2, 0xb5, 0xd6, 0x0, 0xc0, 0x4f, 0xd9, 0x18, 0xd0, PID_FIRST_USABLE + 15);    // PID_WEEK
DEFINE_API_PKEY(PKEY_YEARMONTH,        YearMonth       , 0x28636aa6, 0x953d, 0x11d2, 0xb5, 0xd6, 0x0, 0xc0, 0x4f, 0xd9, 0x18, 0xd0, PID_FIRST_USABLE + 16);    // PID_YEARMONTH
DEFINE_API_PKEY(PKEY_DIRNAME,          DirectoryName   , 0x28636aa6, 0x953d, 0x11d2, 0xb5, 0xd6, 0x0, 0xc0, 0x4f, 0xd9, 0x18, 0xd0, PID_FIRST_USABLE + 17);    // PID_DIRNAME
DEFINE_API_PKEY(PKEY_PIVOTTYPE,        PivotType       , 0x28636aa6, 0x953d, 0x11d2, 0xb5, 0xd6, 0x0, 0xc0, 0x4f, 0xd9, 0x18, 0xd0, PID_FIRST_USABLE + 18);    // PID_PIVOTTYPE
DEFINE_API_PKEY(PKEY_MAXSTACKCOUNT,    MaxStackCount   , 0x28636aa6, 0x953d, 0x11d2, 0xb5, 0xd6, 0x0, 0xc0, 0x4f, 0xd9, 0x18, 0xd0, PID_FIRST_USABLE + 20);
DEFINE_API_PKEY(PKEY_SMARTDATE,        SmartDate       , 0x28636aa6, 0x953d, 0x11d2, 0xb5, 0xd6, 0x0, 0xc0, 0x4f, 0xd9, 0x18, 0xd0, PID_FIRST_USABLE + 21);
DEFINE_API_PKEY(PKEY_PARSINGNAME,      ParsingName     , 0x28636aa6, 0x953d, 0x11d2, 0xb5, 0xd6, 0x0, 0xc0, 0x4f, 0xd9, 0x18, 0xd0, PID_FIRST_USABLE + 22);
DEFINE_API_PKEY(PKEY_SFGAOFLAGS,       SFGAOFlags      , 0x28636aa6, 0x953d, 0x11d2, 0xb5, 0xd6, 0x0, 0xc0, 0x4f, 0xd9, 0x18, 0xd0, PID_FIRST_USABLE + 23);
DEFINE_API_PKEY(PKEY_ORDER,            Order           , 0x28636aa6, 0x953d, 0x11d2, 0xb5, 0xd6, 0x0, 0xc0, 0x4f, 0xd9, 0x18, 0xd0, PID_FIRST_USABLE + 24);
DEFINE_API_PKEY(PKEY_PROGRESS,         Progress        , 0x28636aa6, 0x953d, 0x11d2, 0xb5, 0xd6, 0x0, 0xc0, 0x4f, 0xd9, 0x18, 0xd0, PID_FIRST_USABLE + 25);
DEFINE_API_PKEY(PKEY_SFGAOMASK,        SFGAOMask       , 0x28636aa6, 0x953d, 0x11d2, 0xb5, 0xd6, 0x0, 0xc0, 0x4f, 0xd9, 0x18, 0xd0, PID_FIRST_USABLE + 26);
DEFINE_API_PKEY(PKEY_SYNCTIME,         SyncTime        , 0x28636aa6, 0x953d, 0x11d2, 0xb5, 0xd6, 0x0, 0xc0, 0x4f, 0xd9, 0x18, 0xd0, PID_FIRST_USABLE + 27);
DEFINE_API_PKEY(PKEY_DELEGATENAME,     DelegateName    , 0x28636aa6, 0x953d, 0x11d2, 0xb5, 0xd6, 0x0, 0xc0, 0x4f, 0xd9, 0x18, 0xd0, PID_FIRST_USABLE + 28);
DEFINE_API_PKEY(PKEY_NETWORKPROVIDER,  NetworkProvider , 0x28636aa6, 0x953d, 0x11d2, 0xb5, 0xd6, 0x0, 0xc0, 0x4f, 0xd9, 0x18, 0xd0, PID_FIRST_USABLE + 29);


// Was FMTID_Misc {0x9b174b34, 0x40ff, 0x11d2, 0xa2, 0x7e, 0x0, 0xc0, 0x4f, 0xc3, 0x8, 0x71}
DEFINE_API_PKEY(PKEY_ACCESSCOUNT,           AccessCount             , 0x9b174b34, 0x40ff, 0x11d2, 0xa2, 0x7e, 0x0, 0xc0, 0x4f, 0xc3, 0x8, 0x71, 3); // PID_MISC_ACCESSCOUNT
DEFINE_API_PKEY(PKEY_OWNER,                 Owner                   , 0x9b174b34, 0x40ff, 0x11d2, 0xa2, 0x7e, 0x0, 0xc0, 0x4f, 0xc3, 0x8, 0x71, 4); // PID_MISC_OWNER
DEFINE_API_PKEY(PKEY_OWNER_FRIENDLY,        OwnerFriendly           , 0x9b174b34, 0x40ff, 0x11d2, 0xa2, 0x7e, 0x0, 0xc0, 0x4f, 0xc3, 0x8, 0x71, 7); // PID_MISC_OWNER_FRIENDLY
DEFINE_API_PKEY(PKEY_NEWMENUPREFERREDTYPES, NewMenuPreferredTypes   , 0x9b174b34, 0x40ff, 0x11d2, 0xa2, 0x7e, 0x0, 0xc0, 0x4f, 0xc3, 0x8, 0x71, 8); // PID_MISC_PREFERREDTYPES
DEFINE_API_PKEY(PKEY_ENTITYID,              EntityId                , 0x9b174b34, 0x40ff, 0x11d2, 0xa2, 0x7e, 0x0, 0xc0, 0x4f, 0xc3, 0x8, 0x71, 9); // PID_MISC_ENTITYID
DEFINE_API_PKEY(PKEY_NEWMENUALLOWEDTYPES,   NewMenuAllowedTypes     , 0x9b174b34, 0x40ff, 0x11d2, 0xa2, 0x7e, 0x0, 0xc0, 0x4f, 0xc3, 0x8, 0x71, 10);
DEFINE_API_PKEY(PKEY_ITEMKEY,               ItemKey                 , 0x9b174b34, 0x40ff, 0x11d2, 0xa2, 0x7e, 0x0, 0xc0, 0x4f, 0xc3, 0x8, 0x71, 12);
DEFINE_API_PKEY(PKEY_ARGUMENTS,             Arguments               , 0x9b174b34, 0x40ff, 0x11d2, 0xa2, 0x7e, 0x0, 0xc0, 0x4f, 0xc3, 0x8, 0x71, 13);
DEFINE_API_PKEY(PKEY_RELATIONSHIPID,        RelationshipId          , 0x9b174b34, 0x40ff, 0x11d2, 0xa2, 0x7e, 0x0, 0xc0, 0x4f, 0xc3, 0x8, 0x71, 14);
DEFINE_API_PKEY(PKEY_SOURCEITEMID,          SourceItemId            , 0x9b174b34, 0x40ff, 0x11d2, 0xa2, 0x7e, 0x0, 0xc0, 0x4f, 0xc3, 0x8, 0x71, 15);

// Attribute properties
DEFINE_API_PKEY(PKEY_ISHIDDEN,              IsHidden                , 0x8f34eb7a, 0xd526, 0x4619, 0xa5, 0x56, 0x84, 0x98, 0xa8, 0xc7, 0xa2, 0xd6, PID_FIRST_USABLE);
DEFINE_API_PKEY(PKEY_ISREADONLY,            IsReadOnly              , 0x8f34eb7a, 0xd526, 0x4619, 0xa5, 0x56, 0x84, 0x98, 0xa8, 0xc7, 0xa2, 0xd6, PID_FIRST_USABLE + 1);
DEFINE_API_PKEY(PKEY_ISENCRYPTED,           IsEncrypted             , 0x8f34eb7a, 0xd526, 0x4619, 0xa5, 0x56, 0x84, 0x98, 0xa8, 0xc7, 0xa2, 0xd6, PID_FIRST_USABLE + 2);
DEFINE_API_PKEY(PKEY_ISCOMPRESSED,          IsCompressed            , 0x8f34eb7a, 0xd526, 0x4619, 0xa5, 0x56, 0x84, 0x98, 0xa8, 0xc7, 0xa2, 0xd6, PID_FIRST_USABLE + 3);
DEFINE_API_PKEY(PKEY_ISFILEBACKED,          IsFileBacked            , 0x8f34eb7a, 0xd526, 0x4619, 0xa5, 0x56, 0x84, 0x98, 0xa8, 0xc7, 0xa2, 0xd6, PID_FIRST_USABLE + 4);
DEFINE_API_PKEY(PKEY_ISSYSTEM,              IsSystem                , 0x8f34eb7a, 0xd526, 0x4619, 0xa5, 0x56, 0x84, 0x98, 0xa8, 0xc7, 0xa2, 0xd6, PID_FIRST_USABLE + 5);
DEFINE_API_PKEY(PKEY_ISFOLDER,              IsFolder                , 0x8f34eb7a, 0xd526, 0x4619, 0xa5, 0x56, 0x84, 0x98, 0xa8, 0xc7, 0xa2, 0xd6, PID_FIRST_USABLE + 6);

// PSGUID_WEBVIEW  {0xf2275480, 0xf782, 0x4291, 0xbd, 0x94, 0xf1, 0x36, 0x93, 0x51, 0x3a, 0xec}
DEFINE_API_PKEY(PKEY_DetailsProperties, DetailsProperties, 0xf2275480, 0xf782, 0x4291, 0xbd, 0x94, 0xf1, 0x36, 0x93, 0x51, 0x3a, 0xec, 0); // TODO: PID_DISPLAY_PROPERTIES == 0!!!! Wrong, must be >= 2.
#define PID_INTROTEXT           1

// PSGUID_MUSIC    {0x56a3372e, 0xce9c, 0x11d2, 0x9f, 0xe, 0x0, 0x60, 0x97, 0xc6, 0x86, 0xf6}
DEFINE_API_PKEY(PKEY_MUSIC_Artist,                  MusicArtist                 , 0x56a3372e, 0xce9c, 0x11d2, 0x9f, 0xe, 0x0, 0x60, 0x97, 0xc6, 0x86, 0xf6, PID_FIRST_USABLE);         // PIDSI_MUSIC_ARTIST
DEFINE_API_PKEY(PKEY_MUSIC_Album,                   MusicAlbum                  , 0x56a3372e, 0xce9c, 0x11d2, 0x9f, 0xe, 0x0, 0x60, 0x97, 0xc6, 0x86, 0xf6, PID_FIRST_USABLE + 2);     // PIDSI_MUSIC_ALBUM
DEFINE_API_PKEY(PKEY_MUSIC_Year,                    MusicYear                   , 0x56a3372e, 0xce9c, 0x11d2, 0x9f, 0xe, 0x0, 0x60, 0x97, 0xc6, 0x86, 0xf6, PID_FIRST_USABLE + 3);     // PIDSI_MUSIC_YEAR
DEFINE_API_PKEY(PKEY_MUSIC_Track,                   MusicTrack                  , 0x56a3372e, 0xce9c, 0x11d2, 0x9f, 0xe, 0x0, 0x60, 0x97, 0xc6, 0x86, 0xf6, PID_FIRST_USABLE + 5);     // PIDSI_MUSIC_TRACK
DEFINE_API_PKEY(PKEY_MUSIC_Genre,                   MusicGenre                  , 0x56a3372e, 0xce9c, 0x11d2, 0x9f, 0xe, 0x0, 0x60, 0x97, 0xc6, 0x86, 0xf6, PID_FIRST_USABLE + 9);     // PIDSI_MUSIC_GENRE
DEFINE_API_PKEY(PKEY_MUSIC_Lyrics,                  MusicLyrics                 , 0x56a3372e, 0xce9c, 0x11d2, 0x9f, 0xe, 0x0, 0x60, 0x97, 0xc6, 0x86, 0xf6, PID_FIRST_USABLE + 10);    // PIDSI_MUSIC_LYRICS
DEFINE_API_PKEY(PKEY_MUSIC_AlbumArtist,             MusicAlbumArtist            , 0x56a3372e, 0xce9c, 0x11d2, 0x9f, 0xe, 0x0, 0x60, 0x97, 0xc6, 0x86, 0xf6, PID_FIRST_USABLE + 11);    // PIDSI_MUSIC_ALBUM_ARTIST
DEFINE_API_PKEY(PKEY_MUSIC_ContentGroupDescription, MusicContentGroupDescription, 0x56a3372e, 0xce9c, 0x11d2, 0x9f, 0xe, 0x0, 0x60, 0x97, 0xc6, 0x86, 0xf6, PID_FIRST_USABLE + 31);    // PIDSI_MUSIC_CONTENT_GROUP_DESCRIPTION
DEFINE_API_PKEY(PKEY_MUSIC_InitialKey,              MusicInitialKey             , 0x56a3372e, 0xce9c, 0x11d2, 0x9f, 0xe, 0x0, 0x60, 0x97, 0xc6, 0x86, 0xf6, PID_FIRST_USABLE + 32);    // PIDSI_MUSIC_INITIAL_KEY
DEFINE_API_PKEY(PKEY_MUSIC_BeatsPerMinute,          MusicBeatsPerMinute         , 0x56a3372e, 0xce9c, 0x11d2, 0x9f, 0xe, 0x0, 0x60, 0x97, 0xc6, 0x86, 0xf6, PID_FIRST_USABLE + 33);    // PIDSI_MUSIC_BEATS_PER_MINUTE
DEFINE_API_PKEY(PKEY_MUSIC_Conductor,               MusicConductor              , 0x56a3372e, 0xce9c, 0x11d2, 0x9f, 0xe, 0x0, 0x60, 0x97, 0xc6, 0x86, 0xf6, PID_FIRST_USABLE + 34);    // PIDSI_MUSIC_CONDUCTOR
DEFINE_API_PKEY(PKEY_MUSIC_PartOfSet,               MusicPartOfSet              , 0x56a3372e, 0xce9c, 0x11d2, 0x9f, 0xe, 0x0, 0x60, 0x97, 0xc6, 0x86, 0xf6, PID_FIRST_USABLE + 35);    // PIDSI_MUSIC_PART_OF_SET
DEFINE_API_PKEY(PKEY_MUSIC_SubTitle,                MusicSubTitle               , 0x56a3372e, 0xce9c, 0x11d2, 0x9f, 0xe, 0x0, 0x60, 0x97, 0xc6, 0x86, 0xf6, PID_FIRST_USABLE + 36);    // PIDSI_MUSIC_SUB_TITLE
DEFINE_API_PKEY(PKEY_MUSIC_Mood,                    MusicMood                   , 0x56a3372e, 0xce9c, 0x11d2, 0x9f, 0xe, 0x0, 0x60, 0x97, 0xc6, 0x86, 0xf6, PID_FIRST_USABLE + 37);    // PIDSI_MUSIC_MOOD
DEFINE_API_PKEY(PKEY_MUSIC_CopyTrack,               MusicCopyTrack              , 0x56a3372e, 0xce9c, 0x11d2, 0x9f, 0xe, 0x0, 0x60, 0x97, 0xc6, 0x86, 0xf6, PID_FIRST_USABLE + 38);

// PSGUID_DRM    {0xaeac19e4, 0x89ae, 0x4508, 0xb9, 0xb7, 0xbb, 0x86, 0x7a, 0xbe, 0xe2, 0xed}
DEFINE_API_PKEY(PKEY_DRM_Protected,      DrmProtected     , 0xaeac19e4, 0x89ae, 0x4508, 0xb9, 0xb7, 0xbb, 0x86, 0x7a, 0xbe, 0xe2, 0xed, 2);  // PIDDRSI_PROTECTED
DEFINE_API_PKEY(PKEY_DRM_Description,    DrmDescription   , 0xaeac19e4, 0x89ae, 0x4508, 0xb9, 0xb7, 0xbb, 0x86, 0x7a, 0xbe, 0xe2, 0xed, 3);  // PIDDRSI_DESCRIPTION
DEFINE_API_PKEY(PKEY_DRM_PlayCount,      DrmPlayCount     , 0xaeac19e4, 0x89ae, 0x4508, 0xb9, 0xb7, 0xbb, 0x86, 0x7a, 0xbe, 0xe2, 0xed, 4);  // PIDDRSI_PLAYCOUNT
DEFINE_API_PKEY(PKEY_DRM_PlayStarts,     DrmPlayStarts    , 0xaeac19e4, 0x89ae, 0x4508, 0xb9, 0xb7, 0xbb, 0x86, 0x7a, 0xbe, 0xe2, 0xed, 5);  // PIDDRSI_PLAYSTARTS
DEFINE_API_PKEY(PKEY_DRM_PlayExpires,    DrmPlayExpires   , 0xaeac19e4, 0x89ae, 0x4508, 0xb9, 0xb7, 0xbb, 0x86, 0x7a, 0xbe, 0xe2, 0xed, 6);  // PIDDRSI_PLAYEXPIRES

// PSGUID_AUDIO   {0x64440490, 0x4c8b, 0x11d1, 0x8b, 0x70, 0x8, 0x0, 0x36, 0xb1, 0x1a, 0x3}
DEFINE_API_PKEY(PKEY_AUDIO_Format,       AudioFormat      , 0x64440490, 0x4c8b, 0x11d1, 0x8b, 0x70, 0x8, 0x0, 0x36, 0xb1, 0x1a, 0x3, 2);       // PIDASI_FORMAT     VT_BSTR
DEFINE_API_PKEY(PKEY_AUDIO_Duration,     AudioDuration    , 0x64440490, 0x4c8b, 0x11d1, 0x8b, 0x70, 0x8, 0x0, 0x36, 0xb1, 0x1a, 0x3, 3);       // PIDASI_TIMELENGTH - 100ns units, not milliseconds. VT_UI8, not VT_UI4
DEFINE_API_PKEY(PKEY_AUDIO_Bitrate,      AudioBitrate     , 0x64440490, 0x4c8b, 0x11d1, 0x8b, 0x70, 0x8, 0x0, 0x36, 0xb1, 0x1a, 0x3, 4);       // PIDASI_AVG_DATA_RATE - bits per second VT_UI4
DEFINE_API_PKEY(PKEY_AUDIO_SampleRate,   AudioSampleRate  , 0x64440490, 0x4c8b, 0x11d1, 0x8b, 0x70, 0x8, 0x0, 0x36, 0xb1, 0x1a, 0x3, 5);       // PIDASI_SAMPLE_RATE - samples per second VT_UI4
DEFINE_API_PKEY(PKEY_AUDIO_SampleSize,   AudioSampleSize  , 0x64440490, 0x4c8b, 0x11d1, 0x8b, 0x70, 0x8, 0x0, 0x36, 0xb1, 0x1a, 0x3, 6);       // PIDASI_SAMPLE_SIZE - bits per sample VT_UI4
DEFINE_API_PKEY(PKEY_AUDIO_ChannelCount, AudioChannelCount, 0x64440490, 0x4c8b, 0x11d1, 0x8b, 0x70, 0x8, 0x0, 0x36, 0xb1, 0x1a, 0x3, 7);       // PIDASI_CHANNEL_COUNT - 1 (mono), 2(stero) VT_UI4
DEFINE_API_PKEY(PKEY_AUDIO_StreamNumber, AudioStreamNumber, 0x64440490, 0x4c8b, 0x11d1, 0x8b, 0x70, 0x8, 0x0, 0x36, 0xb1, 0x1a, 0x3, 8);       // PIDASI_STREAM_NUMBER - VT_UI2
DEFINE_API_PKEY(PKEY_AUDIO_StreamName,   AudioStreamName,   0x64440490, 0x4c8b, 0x11d1, 0x8b, 0x70, 0x8, 0x0, 0x36, 0xb1, 0x1a, 0x3, 9);       // PIDASI_STREAM_NAME - VT_LPWSTR
DEFINE_API_PKEY(PKEY_AUDIO_Compression,  AudioCompression,  0x64440490, 0x4c8b, 0x11d1, 0x8b, 0x70, 0x8, 0x0, 0x36, 0xb1, 0x1a, 0x3, 10);      // PIDASI_COMPRESSION - VT_LPWSTR
DEFINE_API_PKEY(PKEY_AUDIO_PreviewStart, AudioPreviewStart, 0x64440490, 0x4c8b, 0x11d1, 0x8b, 0x70, 0x8, 0x0, 0x36, 0xb1, 0x1a, 0x3, 11);      // PIDASI_PREVIEW_START VT_UI8, 100ns
DEFINE_API_PKEY(PKEY_AUDIO_PreviewEnd,   AudioPreviewEnd  , 0x64440490, 0x4c8b, 0x11d1, 0x8b, 0x70, 0x8, 0x0, 0x36, 0xb1, 0x1a, 0x3, 12);      // PIDASI_PREVIEW_END VT_UI8, 100ns

// PSGUID_VIDEO   {0x64440491, 0x4c8b, 0x11d1, 0x8b, 0x70, 0x8, 0x0, 0x36, 0xb1, 0x1a, 0x3}
DEFINE_API_PKEY(PKEY_VIDEO_StreamName,   VideoStreamName  , 0x64440491, 0x4c8b, 0x11d1, 0x8b, 0x70, 0x8, 0x0, 0x36, 0xb1, 0x1a, 0x3, 2);      // PIDVSI_STREAM_NAME  "StreamName", VT_LPWSTR
DEFINE_API_PKEY(PKEY_VIDEO_FrameRate,    VideoFrameRate   , 0x64440491, 0x4c8b, 0x11d1, 0x8b, 0x70, 0x8, 0x0, 0x36, 0xb1, 0x1a, 0x3, 6);      // PIDVSI_FRAME_RATE frames per 1000s  "FrameRate", VT_UI4, frames/millisecond
DEFINE_API_PKEY(PKEY_VIDEO_TimeLength,   VideoTimeLength  , 0x64440491, 0x4c8b, 0x11d1, 0x8b, 0x70, 0x8, 0x0, 0x36, 0xb1, 0x1a, 0x3, 7);      // PIDVSI_TIMELENGTH "TimeLength", VT_UI4, milliseconds
DEFINE_API_PKEY(PKEY_VIDEO_Bitrate,      VideoBitrate     , 0x64440491, 0x4c8b, 0x11d1, 0x8b, 0x70, 0x8, 0x0, 0x36, 0xb1, 0x1a, 0x3, 8);      // PIDVSI_DATA_RATE bits per second  "DataRate", VT_UI4, bytes/second
DEFINE_API_PKEY(PKEY_VIDEO_SampleSize,   VideoSampleSize  , 0x64440491, 0x4c8b, 0x11d1, 0x8b, 0x70, 0x8, 0x0, 0x36, 0xb1, 0x1a, 0x3, 9);      // PIDVSI_SAMPLE_SIZE bits  "SampleSize", VT_UI4
DEFINE_API_PKEY(PKEY_VIDEO_Compression,  VideoCompression , 0x64440491, 0x4c8b, 0x11d1, 0x8b, 0x70, 0x8, 0x0, 0x36, 0xb1, 0x1a, 0x3, 10);     // PIDVSI_COMPRESSION  "Compression", VT_LPWSTR

// PSGUID_RECORDEDTV     {0x6d748de2, 0x8d38, 0x4cc3, 0xac, 0x60, 0xf0, 0x09, 0xb0, 0x57, 0xc5, 0x57}
DEFINE_API_PKEY(PKEY_RECORDEDTV_EpisodeName,        RecordedTvEpisodeName       , 0x6d748de2, 0x8d38, 0x4cc3, 0xac, 0x60, 0xf0, 0x09, 0xb0, 0x57, 0xc5, 0x57, 2);     // "Nowhere to Hyde", VT_LPWSTR
DEFINE_API_PKEY(PKEY_RECORDEDTV_ProgramDescription, RecordedTvProgramDescription, 0x6d748de2, 0x8d38, 0x4cc3, 0xac, 0x60, 0xf0, 0x09, 0xb0, 0x57, 0xc5, 0x57, 3);     // "", VT_LPWSTR
DEFINE_API_PKEY(PKEY_RECORDEDTV_Credits,            RecordedTvCredits           , 0x6d748de2, 0x8d38, 0x4cc3, 0xac, 0x60, 0xf0, 0x09, 0xb0, 0x57, 0xc5, 0x57, 4);     // "Don Messick/Frank Welker/Casey Kasem/Heather North/Nicole Jaffe;;;", VT_LPWSTR
DEFINE_API_PKEY(PKEY_RECORDEDTV_StationCallSign,    RecordedTvStationCallSign   , 0x6d748de2, 0x8d38, 0x4cc3, 0xac, 0x60, 0xf0, 0x09, 0xb0, 0x57, 0xc5, 0x57, 5);     // "TOONP", VT_LPWSTR
DEFINE_API_PKEY(PKEY_RECORDEDTV_ChannelNumber,      RecordedTvChannelNumber     , 0x6d748de2, 0x8d38, 0x4cc3, 0xac, 0x60, 0xf0, 0x09, 0xb0, 0x57, 0xc5, 0x57, 7);     // 42, VT_UI4
DEFINE_API_PKEY(PKEY_RECORDEDTV_Rating,             RecordedTvRating            , 0x6d748de2, 0x8d38, 0x4cc3, 0xac, 0x60, 0xf0, 0x09, 0xb0, 0x57, 0xc5, 0x57, 8);     // "TV-G", VT_LPWSTR
DEFINE_API_PKEY(PKEY_RECORDEDTV_VideoQuality,       RecordedTvVideoQuality      , 0x6d748de2, 0x8d38, 0x4cc3, 0xac, 0x60, 0xf0, 0x09, 0xb0, 0x57, 0xc5, 0x57, 10);    // "Good", VT_LPWSTR
DEFINE_API_PKEY(PKEY_RECORDEDTV_AudioQuality,       RecordedTvAudioQuality      , 0x6d748de2, 0x8d38, 0x4cc3, 0xac, 0x60, 0xf0, 0x09, 0xb0, 0x57, 0xc5, 0x57, 11);    // "Stereo", VT_LPWSTR
DEFINE_API_PKEY(PKEY_RECORDEDTV_ClosedCaptioning,   RecordedTvClosedCaptioning  , 0x6d748de2, 0x8d38, 0x4cc3, 0xac, 0x60, 0xf0, 0x09, 0xb0, 0x57, 0xc5, 0x57, 12);    // TRUE, VT_BOOL
DEFINE_API_PKEY(PKEY_RECORDEDTV_Repeat,             RecordedTvRepeat            , 0x6d748de2, 0x8d38, 0x4cc3, 0xac, 0x60, 0xf0, 0x09, 0xb0, 0x57, 0xc5, 0x57, 13);    // TRUE, VT_BOOL
DEFINE_API_PKEY(PKEY_RECORDEDTV_SAP,                RecordedTvSap               , 0x6d748de2, 0x8d38, 0x4cc3, 0xac, 0x60, 0xf0, 0x09, 0xb0, 0x57, 0xc5, 0x57, 14);    // TRUE, VT_BOOL

// NOTE: These properties MUST map to existing EXIF properties.  Otherwise place under PSGUID_CUSTOMIMAGEPROPERTIES
// PSGUID_IMAGEPROPERTIES {0x14b81da1, 0x0135, 0x4d31, 0x96, 0xd9, 0x6c, 0xbf, 0xc9, 0x67, 0x1a, 0x99}
DEFINE_API_PKEY(PKEY_Compression,     Compression    , 0x14b81da1, 0x0135, 0x4d31, 0x96, 0xd9, 0x6c, 0xbf, 0xc9, 0x67, 0x1a, 0x99, 0x0103); // PropertyTagCompression
DEFINE_API_PKEY(PKEY_CameraModel,     CameraModel    , 0x14b81da1, 0x0135, 0x4d31, 0x96, 0xd9, 0x6c, 0xbf, 0xc9, 0x67, 0x1a, 0x99, 0x0110); // PropertyTagEquipModel
DEFINE_API_PKEY(PKEY_TagCopyright,    TagCopyright   , 0x14b81da1, 0x0135, 0x4d31, 0x96, 0xd9, 0x6c, 0xbf, 0xc9, 0x67, 0x1a, 0x99, 0x8298); // PropertyTagCopyright
DEFINE_API_PKEY(PKEY_TagSoftwareUsed, TagSoftwareUsed, 0x14b81da1, 0x0135, 0x4d31, 0x96, 0xd9, 0x6c, 0xbf, 0xc9, 0x67, 0x1a, 0x99, 0x0131); // PropertyTagSoftwareUsed
DEFINE_API_PKEY(PKEY_DateTaken,       DateTaken      , 0x14b81da1, 0x0135, 0x4d31, 0x96, 0xd9, 0x6c, 0xbf, 0xc9, 0x67, 0x1a, 0x99, 0x9003); // PropertyTagExifDTOrig
DEFINE_API_PKEY(PKEY_Flash,           Flash          , 0x14b81da1, 0x0135, 0x4d31, 0x96, 0xd9, 0x6c, 0xbf, 0xc9, 0x67, 0x1a, 0x99, 0x9209); // PropertyTagExifFlash
DEFINE_API_PKEY(PKEY_ColorSpace,      ColorSpace     , 0x14b81da1, 0x0135, 0x4d31, 0x96, 0xd9, 0x6c, 0xbf, 0xc9, 0x67, 0x1a, 0x99, 0xA001); // PropertyTagExifColorSpace
DEFINE_API_PKEY(PKEY_ShutterSpeed,    ShutterSpeed   , 0x14b81da1, 0x0135, 0x4d31, 0x96, 0xd9, 0x6c, 0xbf, 0xc9, 0x67, 0x1a, 0x99, 0x9201); // PropertyTagExifShutterSpeed
DEFINE_API_PKEY(PKEY_Aperture,        Aperture       , 0x14b81da1, 0x0135, 0x4d31, 0x96, 0xd9, 0x6c, 0xbf, 0xc9, 0x67, 0x1a, 0x99, 0x9202); // PropertyTagExifAperture
DEFINE_API_PKEY(PKEY_SubjectDist,     SubjectDist    , 0x14b81da1, 0x0135, 0x4d31, 0x96, 0xd9, 0x6c, 0xbf, 0xc9, 0x67, 0x1a, 0x99, 0x9206); // PropertyTagExifSubjectDist
DEFINE_API_PKEY(PKEY_FocalLength,     FocalLength    , 0x14b81da1, 0x0135, 0x4d31, 0x96, 0xd9, 0x6c, 0xbf, 0xc9, 0x67, 0x1a, 0x99, 0x920A); // PropertyTagExifFocalLength
DEFINE_API_PKEY(PKEY_FNumber,         FNumber        , 0x14b81da1, 0x0135, 0x4d31, 0x96, 0xd9, 0x6c, 0xbf, 0xc9, 0x67, 0x1a, 0x99, 0x829D); // PropertyTagExifFNumber
DEFINE_API_PKEY(PKEY_ExposureTime,    ExposureTime   , 0x14b81da1, 0x0135, 0x4d31, 0x96, 0xd9, 0x6c, 0xbf, 0xc9, 0x67, 0x1a, 0x99, 0x829A); // PropertyTagExifExposureTime
DEFINE_API_PKEY(PKEY_FlashEnergy,     FlashEnergy    , 0x14b81da1, 0x0135, 0x4d31, 0x96, 0xd9, 0x6c, 0xbf, 0xc9, 0x67, 0x1a, 0x99, 0xA20B); // PropertyTagExifFlashEnergy
DEFINE_API_PKEY(PKEY_ISOSpeed,        IsoSpeed       , 0x14b81da1, 0x0135, 0x4d31, 0x96, 0xd9, 0x6c, 0xbf, 0xc9, 0x67, 0x1a, 0x99, 0x8827); // PropertyTagExifISOSpeed
DEFINE_API_PKEY(PKEY_MeteringMode,    MeteringMode   , 0x14b81da1, 0x0135, 0x4d31, 0x96, 0xd9, 0x6c, 0xbf, 0xc9, 0x67, 0x1a, 0x99, 0x9207); // PropertyTagExifMeteringMode
DEFINE_API_PKEY(PKEY_LightSource,     LightSource    , 0x14b81da1, 0x0135, 0x4d31, 0x96, 0xd9, 0x6c, 0xbf, 0xc9, 0x67, 0x1a, 0x99, 0x9208); // PropertyTagExifLightSource
DEFINE_API_PKEY(PKEY_ExposureProg,    ExposureProg   , 0x14b81da1, 0x0135, 0x4d31, 0x96, 0xd9, 0x6c, 0xbf, 0xc9, 0x67, 0x1a, 0x99, 0x8822); // PropertyTagExifExposureProg
DEFINE_API_PKEY(PKEY_ExposureBias,    ExposureBias   , 0x14b81da1, 0x0135, 0x4d31, 0x96, 0xd9, 0x6c, 0xbf, 0xc9, 0x67, 0x1a, 0x99, 0x9204); // PropertyTagExifExposureBias
DEFINE_API_PKEY(PKEY_TagEquipMake,    TagEquipMake   , 0x14b81da1, 0x0135, 0x4d31, 0x96, 0xd9, 0x6c, 0xbf, 0xc9, 0x67, 0x1a, 0x99, 0x010F); // PropertyTagEquipMake
DEFINE_API_PKEY(PKEY_FaxEndTime,      FaxEndTime     , 0x14b81da1, 0x0135, 0x4d31, 0x96, 0xd9, 0x6c, 0xbf, 0xc9, 0x67, 0x1a, 0x99, 40052);  // TIFFTAG_FAX_END_TIME
DEFINE_API_PKEY(PKEY_FaxSenderName,   FaxSenderName  , 0x14b81da1, 0x0135, 0x4d31, 0x96, 0xd9, 0x6c, 0xbf, 0xc9, 0x67, 0x1a, 0x99, 40021);  // TIFFTAG_SENDER_NAME
DEFINE_API_PKEY(PKEY_FaxTSID,         FaxTsId        , 0x14b81da1, 0x0135, 0x4d31, 0x96, 0xd9, 0x6c, 0xbf, 0xc9, 0x67, 0x1a, 0x99, 40002);  // TIFFTAG_TSID
DEFINE_API_PKEY(PKEY_FaxCallerId,     FaxCallerId    , 0x14b81da1, 0x0135, 0x4d31, 0x96, 0xd9, 0x6c, 0xbf, 0xc9, 0x67, 0x1a, 0x99, 40005);  // TIFFTAG_CALLERID
DEFINE_API_PKEY(PKEY_FaxRecipName,    FaxRecipName   , 0x14b81da1, 0x0135, 0x4d31, 0x96, 0xd9, 0x6c, 0xbf, 0xc9, 0x67, 0x1a, 0x99, 40006);  // TIFFTAG_RECIP_NAME
DEFINE_API_PKEY(PKEY_FaxRecipNumber,  FaxRecipNumber , 0x14b81da1, 0x0135, 0x4d31, 0x96, 0xd9, 0x6c, 0xbf, 0xc9, 0x67, 0x1a, 0x99, 40007);  // TIFFTAG_RECIP_NUMBER
DEFINE_API_PKEY(PKEY_FaxCSID,         FaxCsId        , 0x14b81da1, 0x0135, 0x4d31, 0x96, 0xd9, 0x6c, 0xbf, 0xc9, 0x67, 0x1a, 0x99, 40001);  // TIFFTAG_CSID
DEFINE_API_PKEY(PKEY_FaxRouting,      FaxRouting     , 0x14b81da1, 0x0135, 0x4d31, 0x96, 0xd9, 0x6c, 0xbf, 0xc9, 0x67, 0x1a, 0x99, 40004);  // TIFFTAG_ROUTING
DEFINE_API_PKEY(PKEY_ImagePropertyBag, PropertyBag   , 0x14b81da1, 0x0135, 0x4d31, 0x96, 0xd9, 0x6c, 0xbf, 0xc9, 0x67, 0x1a, 0x99, 0x9CA0);  // PropertyTagImagePropertyBag
DEFINE_API_PKEY(PKEY_FocalRegions,    FocalRegions   , 0x14b81da1, 0x0135, 0x4d31, 0x96, 0xd9, 0x6c, 0xbf, 0xc9, 0x67, 0x1a, 0x99, 0x9CA1);  // PropertyTagFocalRegions
DEFINE_API_PKEY(PKEY_Orientation,     Orientation    , 0x14b81da1, 0x0135, 0x4d31, 0x96, 0xd9, 0x6c, 0xbf, 0xc9, 0x67, 0x1a, 0x99, 0x0112);  // PropertyTagOrientation

// NOTE: these are not EXIF tags.  They go into the auxiliary image property store, PropertyTagImagePropertyBag
// FMTID_CustomImageProperties or PSGUID_CUSTOMIMAGEPROPERTIES {0x7ecd8b0e, 0xc136, 0x4a9b, 0x94, 0x11, 0x4e, 0xbd, 0x66, 0x73, 0xcc, 0xc3}
DEFINE_API_PKEY(PKEY_NegativeID,              NegativeID           , 0x7ecd8b0e, 0xc136, 0x4a9b, 0x94, 0x11, 0x4e, 0xbd, 0x66, 0x73, 0xcc, 0xc3, 2);
DEFINE_API_PKEY(PKEY_NegativeLink,            NegativeLink         , 0x7ecd8b0e, 0xc136, 0x4a9b, 0x94, 0x11, 0x4e, 0xbd, 0x66, 0x73, 0xcc, 0xc3, 3);
DEFINE_API_PKEY(PKEY_PhotoEvent,              PhotoEvent           , 0x7ecd8b0e, 0xc136, 0x4a9b, 0x94, 0x11, 0x4e, 0xbd, 0x66, 0x73, 0xcc, 0xc3, 4);
DEFINE_API_PKEY(PKEY_PhotoLocation,           PhotoLocation        , 0x7ecd8b0e, 0xc136, 0x4a9b, 0x94, 0x11, 0x4e, 0xbd, 0x66, 0x73, 0xcc, 0xc3, 5);
DEFINE_API_PKEY(PKEY_PhotoContacts,           PhotoContacts        , 0x7ecd8b0e, 0xc136, 0x4a9b, 0x94, 0x11, 0x4e, 0xbd, 0x66, 0x73, 0xcc, 0xc3, 6);
DEFINE_API_PKEY(PKEY_AcquisitionSessionID,    AcquisitionSessionID , 0x7ecd8b0e, 0xc136, 0x4a9b, 0x94, 0x11, 0x4e, 0xbd, 0x66, 0x73, 0xcc, 0xc3, 7);
DEFINE_API_PKEY(PKEY_AcquisitionDate,         AcquisitionDate      , 0x7ecd8b0e, 0xc136, 0x4a9b, 0x94, 0x11, 0x4e, 0xbd, 0x66, 0x73, 0xcc, 0xc3, 8);
DEFINE_API_PKEY(PKEY_OriginalImageName,       OriginalImageName    , 0x7ecd8b0e, 0xc136, 0x4a9b, 0x94, 0x11, 0x4e, 0xbd, 0x66, 0x73, 0xcc, 0xc3, 9);

// PSGUID_IMAGESUMMARYINFORMATION {0x6444048fL, 0x4c8b, 0x11d1, 0x8b, 0x70, 0x8, 0x00, 0x36, 0xb1, 0x1a, 0x03}
DEFINE_API_PKEY(PKEY_FileType,        FileType       , 0x6444048fL, 0x4c8b, 0x11d1, 0x8b, 0x70, 0x8, 0x00, 0x36, 0xb1, 0x1a, 0x03, 2);      // PIDISI_FILETYPE
DEFINE_API_PKEY(PKEY_ImageCX,         ImageCX        , 0x6444048fL, 0x4c8b, 0x11d1, 0x8b, 0x70, 0x8, 0x00, 0x36, 0xb1, 0x1a, 0x03, 3);      // PIDISI_CX
DEFINE_API_PKEY(PKEY_ImageCY,         ImageCY        , 0x6444048fL, 0x4c8b, 0x11d1, 0x8b, 0x70, 0x8, 0x00, 0x36, 0xb1, 0x1a, 0x03, 4);      // PIDISI_CY
DEFINE_API_PKEY(PKEY_ResolutionX,     ResolutionX    , 0x6444048fL, 0x4c8b, 0x11d1, 0x8b, 0x70, 0x8, 0x00, 0x36, 0xb1, 0x1a, 0x03, 5);      // PIDISI_RESOLUTIONX
DEFINE_API_PKEY(PKEY_ResolutionY,     ResolutionY    , 0x6444048fL, 0x4c8b, 0x11d1, 0x8b, 0x70, 0x8, 0x00, 0x36, 0xb1, 0x1a, 0x03, 6);      // PIDISI_RESOLUTIONY
DEFINE_API_PKEY(PKEY_BitDepth,        BitDepth       , 0x6444048fL, 0x4c8b, 0x11d1, 0x8b, 0x70, 0x8, 0x00, 0x36, 0xb1, 0x1a, 0x03, 7);      // PIDISI_BITDEPTH
DEFINE_API_PKEY(PKEY_Colorspace,      Colorspace     , 0x6444048fL, 0x4c8b, 0x11d1, 0x8b, 0x70, 0x8, 0x00, 0x36, 0xb1, 0x1a, 0x03, 8);      // PIDISI_COLORSPACE
DEFINE_API_PKEY(PKEY_Transparency,    Transparency   , 0x6444048fL, 0x4c8b, 0x11d1, 0x8b, 0x70, 0x8, 0x00, 0x36, 0xb1, 0x1a, 0x03, 10);     // PIDISI_TRANSPARENCY
DEFINE_API_PKEY(PKEY_GammaValue,      GammaValue     , 0x6444048fL, 0x4c8b, 0x11d1, 0x8b, 0x70, 0x8, 0x00, 0x36, 0xb1, 0x1a, 0x03, 11);     // PIDISI_GAMMAVALUE
DEFINE_API_PKEY(PKEY_FrameCount,      FrameCount     , 0x6444048fL, 0x4c8b, 0x11d1, 0x8b, 0x70, 0x8, 0x00, 0x36, 0xb1, 0x1a, 0x03, 12);     // PIDISI_FRAMECOUNT
DEFINE_API_PKEY(PKEY_ImageDimensions, ImageDimensions, 0x6444048fL, 0x4c8b, 0x11d1, 0x8b, 0x70, 0x8, 0x00, 0x36, 0xb1, 0x1a, 0x03, 13);     // PIDISI_DIMENSIONS

// PSGUID_MEDIAFILESUMMARYINFORMATION {0x64440492L, 0x4c8b, 0x11d1, 0x8b, 0x70, 0x08, 0x00, 0x36, 0xb1, 0x1a, 0x03}
DEFINE_API_PKEY(PKEY_Media_Editor,                MediaEditor               , 0x64440492L, 0x4c8b, 0x11d1, 0x8b, 0x70, 0x08, 0x00, 0x36, 0xb1, 0x1a, 0x03, 2);  // PIDMSI_EDITOR      VT_LPWSTR
DEFINE_API_PKEY(PKEY_Media_Supplier,              MediaSupplier             , 0x64440492L, 0x4c8b, 0x11d1, 0x8b, 0x70, 0x08, 0x00, 0x36, 0xb1, 0x1a, 0x03, 3);  // PIDMSI_SUPPLIER    VT_LPWSTR
DEFINE_API_PKEY(PKEY_Media_Source,                MediaSource               , 0x64440492L, 0x4c8b, 0x11d1, 0x8b, 0x70, 0x08, 0x00, 0x36, 0xb1, 0x1a, 0x03, 4);  // PIDMSI_SOURCE      VT_LPWSTR
DEFINE_API_PKEY(PKEY_Media_SequenceNumber,        MediaSequenceNumber       , 0x64440492L, 0x4c8b, 0x11d1, 0x8b, 0x70, 0x08, 0x00, 0x36, 0xb1, 0x1a, 0x03, 5);  // PIDMSI_SEQUENCE_NO VT_LPWSTR
DEFINE_API_PKEY(PKEY_Media_Project,               MediaProject              , 0x64440492L, 0x4c8b, 0x11d1, 0x8b, 0x70, 0x08, 0x00, 0x36, 0xb1, 0x1a, 0x03, 6);  // PIDMSI_PROJECT     VT_LPWSTR
DEFINE_API_PKEY(PKEY_Media_Status,                MediaStatus               , 0x64440492L, 0x4c8b, 0x11d1, 0x8b, 0x70, 0x08, 0x00, 0x36, 0xb1, 0x1a, 0x03, 7);  // PIDMSI_STATUS      VT_UI4
DEFINE_API_PKEY(PKEY_Media_Owner,                 MediaOwner                , 0x64440492L, 0x4c8b, 0x11d1, 0x8b, 0x70, 0x08, 0x00, 0x36, 0xb1, 0x1a, 0x03, 8);  // PIDMSI_OWNER       VT_LPWSTR
DEFINE_API_PKEY(PKEY_Rating,                      Rating                     , 0x64440492L, 0x4c8b, 0x11d1, 0x8b, 0x70, 0x08, 0x00, 0x36, 0xb1, 0x1a, 0x03, 9);  // PIDMSI_RATING      VT_LPWSTR
DEFINE_API_PKEY(PKEY_Media_Production,            MediaProduction           , 0x64440492L, 0x4c8b, 0x11d1, 0x8b, 0x70, 0x08, 0x00, 0x36, 0xb1, 0x1a, 0x03, 10); // PIDMSI_PRODUCTION VT_FILETIME(UTC)
DEFINE_API_PKEY(PKEY_Copyright,                   Copyright                  , 0x64440492L, 0x4c8b, 0x11d1, 0x8b, 0x70, 0x08, 0x00, 0x36, 0xb1, 0x1a, 0x03, 11); // PIDMSI_COPYRIGHT  VT_LPWSTR
DEFINE_API_PKEY(PKEY_Share_User_Rating,           ShareUserRating          , 0x64440492L, 0x4c8b, 0x11d1, 0x8b, 0x70, 0x08, 0x00, 0x36, 0xb1, 0x1a, 0x03, 12); // PIDMSI_SHARE_USER_RATING
DEFINE_API_PKEY(PKEY_Media_MediaClassPrimaryID,   MediaMediaClassPrimaryID  , 0x64440492L, 0x4c8b, 0x11d1, 0x8b, 0x70, 0x08, 0x00, 0x36, 0xb1, 0x1a, 0x03, 13); // PIDMSI_CLASS_PRIMARY_ID
DEFINE_API_PKEY(PKEY_Media_MediaClassSecondaryID, MediaMediaClassSecondaryID, 0x64440492L, 0x4c8b, 0x11d1, 0x8b, 0x70, 0x08, 0x00, 0x36, 0xb1, 0x1a, 0x03, 14); // PIDMSI_CLASS_SECONDARY_ID
DEFINE_API_PKEY(PKEY_Media_DVDID,                 MediaDvdId                , 0x64440492L, 0x4c8b, 0x11d1, 0x8b, 0x70, 0x08, 0x00, 0x36, 0xb1, 0x1a, 0x03, 15); // PIDMSI_DVDID
DEFINE_API_PKEY(PKEY_Media_MCDI,                  MediaMcdi                 , 0x64440492L, 0x4c8b, 0x11d1, 0x8b, 0x70, 0x08, 0x00, 0x36, 0xb1, 0x1a, 0x03, 16); // PIDMSI_MCDI
DEFINE_API_PKEY(PKEY_Media_Provider,              MediaProvider             , 0x64440492L, 0x4c8b, 0x11d1, 0x8b, 0x70, 0x08, 0x00, 0x36, 0xb1, 0x1a, 0x03, 17); // PIDMSI_PROVIDER
DEFINE_API_PKEY(PKEY_Media_ContentDistributor,    MediaContentDistributor   , 0x64440492L, 0x4c8b, 0x11d1, 0x8b, 0x70, 0x08, 0x00, 0x36, 0xb1, 0x1a, 0x03, 18); // PIDMSI_CONTENTDISTRIBUTOR
DEFINE_API_PKEY(PKEY_Media_Composer,              MediaComposer             , 0x64440492L, 0x4c8b, 0x11d1, 0x8b, 0x70, 0x08, 0x00, 0x36, 0xb1, 0x1a, 0x03, 19); // PIDMSI_COMPOSER
DEFINE_API_PKEY(PKEY_Media_Director,              MediaDirector             , 0x64440492L, 0x4c8b, 0x11d1, 0x8b, 0x70, 0x08, 0x00, 0x36, 0xb1, 0x1a, 0x03, 20); // PIDMSI_DIRECTOR
DEFINE_API_PKEY(PKEY_Media_ParentalRating,        MediaParentalRating       , 0x64440492L, 0x4c8b, 0x11d1, 0x8b, 0x70, 0x08, 0x00, 0x36, 0xb1, 0x1a, 0x03, 21); // PIDMSI_PARENTAL_RATING
DEFINE_API_PKEY(PKEY_Media_Producer,              MediaProducer             , 0x64440492L, 0x4c8b, 0x11d1, 0x8b, 0x70, 0x08, 0x00, 0x36, 0xb1, 0x1a, 0x03, 22); // PIDMSI_PRODUCER
DEFINE_API_PKEY(PKEY_Media_Writer,                MediaWriter               , 0x64440492L, 0x4c8b, 0x11d1, 0x8b, 0x70, 0x08, 0x00, 0x36, 0xb1, 0x1a, 0x03, 23); // PIDMSI_WRITER
DEFINE_API_PKEY(PKEY_Media_CollectionGroupID,     MediaCollectionGroupID    , 0x64440492L, 0x4c8b, 0x11d1, 0x8b, 0x70, 0x08, 0x00, 0x36, 0xb1, 0x1a, 0x03, 24); // PIDMSI_COLLECTION_GROUP_ID
DEFINE_API_PKEY(PKEY_Media_CollectionID,          MediaCollectionID         , 0x64440492L, 0x4c8b, 0x11d1, 0x8b, 0x70, 0x08, 0x00, 0x36, 0xb1, 0x1a, 0x03, 25); // PIDMSI_COLLECTION_ID
DEFINE_API_PKEY(PKEY_Media_ContentID,             MediaContentID            , 0x64440492L, 0x4c8b, 0x11d1, 0x8b, 0x70, 0x08, 0x00, 0x36, 0xb1, 0x1a, 0x03, 26); // PIDMSI_CONTENT_ID
DEFINE_API_PKEY(PKEY_Media_ToolName,              MediaToolName             , 0x64440492L, 0x4c8b, 0x11d1, 0x8b, 0x70, 0x08, 0x00, 0x36, 0xb1, 0x1a, 0x03, 27); // PIDMSI_TOOL_NAME
DEFINE_API_PKEY(PKEY_Media_ToolVersion,           MediaToolVersion          , 0x64440492L, 0x4c8b, 0x11d1, 0x8b, 0x70, 0x08, 0x00, 0x36, 0xb1, 0x1a, 0x03, 28); // PIDMSI_TOOL_VERSION
DEFINE_API_PKEY(PKEY_Media_Publisher,             MediaPublisher            , 0x64440492L, 0x4c8b, 0x11d1, 0x8b, 0x70, 0x08, 0x00, 0x36, 0xb1, 0x1a, 0x03, 30); // PIDMSI_PUBLISHER
DEFINE_API_PKEY(PKEY_Media_Period,                MediaPeriod               , 0x64440492L, 0x4c8b, 0x11d1, 0x8b, 0x70, 0x08, 0x00, 0x36, 0xb1, 0x1a, 0x03, 31); // PIDMSI_PERIOD
DEFINE_API_PKEY(PKEY_Media_AuthorURL,             MediaAuthorUrl            , 0x64440492L, 0x4c8b, 0x11d1, 0x8b, 0x70, 0x08, 0x00, 0x36, 0xb1, 0x1a, 0x03, 32); // PIDMSI_AUTHOR_URL
DEFINE_API_PKEY(PKEY_Media_PromotionURL,          MediaPromotionUrl         , 0x64440492L, 0x4c8b, 0x11d1, 0x8b, 0x70, 0x08, 0x00, 0x36, 0xb1, 0x1a, 0x03, 33); // PIDMSI_PROMOTION_URL
DEFINE_API_PKEY(PKEY_Media_UserWebURL,            MediaUserWebUrl           , 0x64440492L, 0x4c8b, 0x11d1, 0x8b, 0x70, 0x08, 0x00, 0x36, 0xb1, 0x1a, 0x03, 34); // PIDMSI_USER_WEB_URL
DEFINE_API_PKEY(PKEY_Media_UniqueFileIdentifier,  MediaUniqueFileIdentifier , 0x64440492L, 0x4c8b, 0x11d1, 0x8b, 0x70, 0x08, 0x00, 0x36, 0xb1, 0x1a, 0x03, 35); // PIDMSI_UNIQUE_FILE_IDENTIFIER
DEFINE_API_PKEY(PKEY_Media_EncodedBy,             MediaEncodedBy            , 0x64440492L, 0x4c8b, 0x11d1, 0x8b, 0x70, 0x08, 0x00, 0x36, 0xb1, 0x1a, 0x03, 36); // PIDMSI_ENCODED_BY
DEFINE_API_PKEY(PKEY_Media_EncodingSettings,      MediaEncodingSettings     , 0x64440492L, 0x4c8b, 0x11d1, 0x8b, 0x70, 0x08, 0x00, 0x36, 0xb1, 0x1a, 0x03, 37); // PIDMSI_ENCODING_SETTINGS
DEFINE_API_PKEY(PKEY_Media_OriginalLocation,      MediaOriginalLocation     , 0x64440492L, 0x4c8b, 0x11d1, 0x8b, 0x70, 0x08, 0x00, 0x36, 0xb1, 0x1a, 0x03, 38);

// PSGUID_SHARE    {0xd8c3986f, 0x813b, 0x449c, 0x84, 0x5d, 0x87, 0xb9, 0x5d, 0x67, 0x4a, 0xde}
DEFINE_API_PKEY(PKEY_CSC_STATUS,      CscStatus     , 0xd8c3986f, 0x813b, 0x449c, 0x84, 0x5d, 0x87, 0xb9, 0x5d, 0x67, 0x4a, 0xde, 2); // PID_SHARE_CSC_STATUS - server or share status, "online" "offline"
DEFINE_API_PKEY(PKEY_PIN_STATUS,      PinStatus     , 0xd8c3986f, 0x813b, 0x449c, 0x84, 0x5d, 0x87, 0xb9, 0x5d, 0x67, 0x4a, 0xde, 3); // PID_PINSTATUS
DEFINE_API_PKEY(PKEY_ACCESS,          Access         , 0xd8c3986f, 0x813b, 0x449c, 0x84, 0x5d, 0x87, 0xb9, 0x5d, 0x67, 0x4a, 0xde, 4); // PID_ACCESS
DEFINE_API_PKEY(PKEY_FILE_CSC_STATUS, FileCscStatus, 0xd8c3986f, 0x813b, 0x449c, 0x84, 0x5d, 0x87, 0xb9, 0x5d, 0x67, 0x4a, 0xde, 5); // PID_FILE_CSC_STATUS - fine grained CSC status for the file

// PSGUID_LINK     {0xb9b4b3fc, 0x2b51, 0x4a42, 0xb5, 0xd8, 0x32, 0x41, 0x46, 0xaf, 0xcf, 0x25}
DEFINE_API_PKEY(PKEY_LINKTARGET,      LinkTarget     , 0xb9b4b3fc, 0x2b51, 0x4a42, 0xb5, 0xd8, 0x32, 0x41, 0x46, 0xaf, 0xcf, 0x25, 2); // PID_LINK_TARGET
DEFINE_API_PKEY(PKEY_LINKTARGET_TYPE, LinkTargetType, 0xb9b4b3fc, 0x2b51, 0x4a42, 0xb5, 0xd8, 0x32, 0x41, 0x46, 0xaf, 0xcf, 0x25, 3); // PID_LINK_TARGET_TYPE

// PSGUID_PRV_STORAGE  {0x8d72aca1, 0x716, 0x419a, 0x9a, 0xc1, 0xac, 0xb0, 0x7b, 0x18, 0xdc, 0x32}
DEFINE_API_PKEY(PKEY_ATTRIBUTES_DESCRIPTION, AttributesDescription, 0x8d72aca1, 0x716, 0x419a, 0x9a, 0xc1, 0xac, 0xb0, 0x7b, 0x18, 0xdc, 0x32, 2); // PID_PRV_STG_ATTRIBUTES_DESCRIPTION

// PSFMTID_VERSION { 0xcef7d53, 0xfa64, 0x11d1, 0xa2, 0x3, 0x0, 0x0, 0xf8, 0x1f, 0xed, 0xee }
DEFINE_API_PKEY(PKEY_FileDescription,  FileDescription , 0xcef7d53, 0xfa64, 0x11d1, 0xa2, 0x3, 0x0, 0x0, 0xf8, 0x1f, 0xed, 0xee, 3);  // PIDVSI_FileDescription
DEFINE_API_PKEY(PKEY_FileVersion,      FileVersion     , 0xcef7d53, 0xfa64, 0x11d1, 0xa2, 0x3, 0x0, 0x0, 0xf8, 0x1f, 0xed, 0xee, 4);  // PIDVSI_FileVersion
DEFINE_API_PKEY(PKEY_InternalName,     InternalName    , 0xcef7d53, 0xfa64, 0x11d1, 0xa2, 0x3, 0x0, 0x0, 0xf8, 0x1f, 0xed, 0xee, 5);  // PIDVSI_InternalName
DEFINE_API_PKEY(PKEY_OriginalFileName, OriginalFileName, 0xcef7d53, 0xfa64, 0x11d1, 0xa2, 0x3, 0x0, 0x0, 0xf8, 0x1f, 0xed, 0xee, 6);  // PIDVSI_OriginalFileName
DEFINE_API_PKEY(PKEY_ProductName,      ProductName     , 0xcef7d53, 0xfa64, 0x11d1, 0xa2, 0x3, 0x0, 0x0, 0xf8, 0x1f, 0xed, 0xee, 7);  // PIDVSI_ProductName
DEFINE_API_PKEY(PKEY_ProductVersion,   ProductVersion  , 0xcef7d53, 0xfa64, 0x11d1, 0xa2, 0x3, 0x0, 0x0, 0xf8, 0x1f, 0xed, 0xee, 8);  // PIDVSI_ProductVersion
DEFINE_API_PKEY(PKEY_Trademarks,       Trademarks      , 0xcef7d53, 0xfa64, 0x11d1, 0xa2, 0x3, 0x0, 0x0, 0xf8, 0x1f, 0xed, 0xee, 9);  // PIDVSI_Trademarks
DEFINE_API_PKEY(PKEY_Languages,        Languages       , 0xcef7d53, 0xfa64, 0x11d1, 0xa2, 0x3, 0x0, 0x0, 0xf8, 0x1f, 0xed, 0xee, 10); // PIDVSI_Languages
DEFINE_API_PKEY(PKEY_Platform,         Platform        , 0xcef7d53, 0xfa64, 0x11d1, 0xa2, 0x3, 0x0, 0x0, 0xf8, 0x1f, 0xed, 0xee, 11); // PIDVSI_Platform
DEFINE_API_PKEY(PKEY_Manifest,         Manifest        , 0xcef7d53, 0xfa64, 0x11d1, 0xa2, 0x3, 0x0, 0x0, 0xf8, 0x1f, 0xed, 0xee, 12); // PIDVSI_Manifest

// PSFMTID_Printing   {0xfe9e4c12, 0xaacb, 0x4aa3, 0x96, 0x6d, 0x91, 0xa2, 0x9e, 0x61, 0x28, 0xb5}
DEFINE_API_PKEY(PKEY_PRN_QUEUESIZE, PrnQueueSize, 0xfe9e4c12, 0xaacb, 0x4aa3, 0x96, 0x6d, 0x91, 0xa2, 0x9e, 0x61, 0x28, 0xb5, 1); // PID_PRN_QUEUESIZE !!TODO: Must be >= 2
DEFINE_API_PKEY(PKEY_PRN_STATUS,    PrnStatus   , 0xfe9e4c12, 0xaacb, 0x4aa3, 0x96, 0x6d, 0x91, 0xa2, 0x9e, 0x61, 0x28, 0xb5, 2); // PID_PRN_STATUS
DEFINE_API_PKEY(PKEY_PRN_LOCATION,  PrnLocation , 0xfe9e4c12, 0xaacb, 0x4aa3, 0x96, 0x6d, 0x91, 0xa2, 0x9e, 0x61, 0x28, 0xb5, 4); // PID_PRN_LOCATION
DEFINE_API_PKEY(PKEY_PRN_MODEL,     PrnModel    , 0xfe9e4c12, 0xaacb, 0x4aa3, 0x96, 0x6d, 0x91, 0xa2, 0x9e, 0x61, 0x28, 0xb5, 5); // PID_PRN_MODEL

// control panel category SCIDs

// PSGUID_CONTROLPANEL {0x305ca226, 0xd286, 0x468e, 0xb8, 0x48, 0x2b, 0x2e, 0x8e, 0x69, 0x7b, 0x74}
DEFINE_API_PKEY(PKEY_CONTROLPANELCATEGORY,      ControlPanelCategory     , 0x305ca226, 0xd286, 0x468e, 0xb8, 0x48, 0x2b, 0x2e, 0x8e, 0x69, 0x7b, 0x74, 2); // PID_CONTROLPANEL_CATEGORY
DEFINE_API_PKEY(PKEY_CONTROLPANELCATEGORY_NAME, ControlPanelCategoryName, 0x305ca226, 0xd286, 0x468e, 0xb8, 0x48, 0x2b, 0x2e, 0x8e, 0x69, 0x7b, 0x74, 3); // PID_CONTROLPANEL_CATEGORY_NAME

// my hardware SCIDs
// PSGUID_Hardware {0x5eaf3ef2, 0xe0ca, 0x4598, 0xbf, 0x06, 0x71, 0xed, 0x1d, 0x9d, 0xd9, 0x53}
DEFINE_API_PKEY(PKEY_Hardware_Name,             HardwareName            , 0x5eaf3ef2, 0xe0ca, 0x4598, 0xbf, 0x06, 0x71, 0xed, 0x1d, 0x9d, 0xd9, 0x53, 2);      // PID_Hardware_Name
DEFINE_API_PKEY(PKEY_Hardware_Icon,             HardwareIcon            , 0x5eaf3ef2, 0xe0ca, 0x4598, 0xbf, 0x06, 0x71, 0xed, 0x1d, 0x9d, 0xd9, 0x53, 3);      // PID_Hardware_Icon
DEFINE_API_PKEY(PKEY_Hardware_DisplayAttribute, HardwareDisplayAttribute, 0x5eaf3ef2, 0xe0ca, 0x4598, 0xbf, 0x06, 0x71, 0xed, 0x1d, 0x9d, 0xd9, 0x53, 5);      // PID_Hardware_DisplayAttribute
DEFINE_API_PKEY(PKEY_Hardware_Manufacturer,     HardwareManufacturer    , 0x5eaf3ef2, 0xe0ca, 0x4598, 0xbf, 0x06, 0x71, 0xed, 0x1d, 0x9d, 0xd9, 0x53, 6);      // PID_Hardware_Manufacturer
DEFINE_API_PKEY(PKEY_Hardware_Model,            HardwareModel           , 0x5eaf3ef2, 0xe0ca, 0x4598, 0xbf, 0x06, 0x71, 0xed, 0x1d, 0x9d, 0xd9, 0x53, 7);      // PID_Hardware_Model
DEFINE_API_PKEY(PKEY_Hardware_SerialNumber,     HardwareSerialNumber    , 0x5eaf3ef2, 0xe0ca, 0x4598, 0xbf, 0x06, 0x71, 0xed, 0x1d, 0x9d, 0xd9, 0x53, 8);      // PID_Hardware_SerialNumber
DEFINE_API_PKEY(PKEY_Hardware_DriverVersion,    HardwareDriverVersion   , 0x5eaf3ef2, 0xe0ca, 0x4598, 0xbf, 0x06, 0x71, 0xed, 0x1d, 0x9d, 0xd9, 0x53, 9);      // PID_Hardware_DriverVersion
DEFINE_API_PKEY(PKEY_Hardware_DriverProvider,   HardwareDriverProvider  , 0x5eaf3ef2, 0xe0ca, 0x4598, 0xbf, 0x06, 0x71, 0xed, 0x1d, 0x9d, 0xd9, 0x53, 10);     // PID_Hardware_DriverProvider
DEFINE_API_PKEY(PKEY_Hardware_DriverDate,       HardwareDriverDate      , 0x5eaf3ef2, 0xe0ca, 0x4598, 0xbf, 0x06, 0x71, 0xed, 0x1d, 0x9d, 0xd9, 0x53, 11);     // PID_Hardware_DriverDate
DEFINE_API_PKEY(PKEY_Hardware_Status,           HardwareStatus          , 0x5eaf3ef2, 0xe0ca, 0x4598, 0xbf, 0x06, 0x71, 0xed, 0x1d, 0x9d, 0xd9, 0x53, 0x1000); // PID_Hardware_Shell_Status
DEFINE_API_PKEY(PKEY_Hardware_Devinst,          HardwareDevinst         , 0x5eaf3ef2, 0xe0ca, 0x4598, 0xbf, 0x06, 0x71, 0xed, 0x1d, 0x9d, 0xd9, 0x53, 0x1001); // PID_Hardware_Shell_Devinst
DEFINE_API_PKEY(PKEY_Hardware_Image,            HardwareImage           , 0x5eaf3ef2, 0xe0ca, 0x4598, 0xbf, 0x06, 0x71, 0xed, 0x1d, 0x9d, 0xd9, 0x53, 0x1002); // PID_Hardware_Shell_Image
DEFINE_API_PKEY(PKEY_Hardware_Function,         HardwareFunction        , 0x5eaf3ef2, 0xe0ca, 0x4598, 0xbf, 0x06, 0x71, 0xed, 0x1d, 0x9d, 0xd9, 0x53, 0x1003); // PID_Hardware_Shell_Function
DEFINE_API_PKEY(PKEY_Hardware_ShellAttributes,  HardwareShellAttributes , 0x5eaf3ef2, 0xe0ca, 0x4598, 0xbf, 0x06, 0x71, 0xed, 0x1d, 0x9d, 0xd9, 0x53, 0x1004); // PID_Hardware_Shell_Attributes

// Zip Property Keys
// PSGUID_ZIP {0xe88dcce0, 0xb7b3, 0x11d1, 0xa9, 0xf0, 0x00, 0xaa, 0x00, 0x60, 0xfa, 0x31}
DEFINE_API_PKEY(PKEY_ZIP_ENCRYPTED,         ZipEncrypted            , 0xe88dcce0, 0xb7b3, 0x11d1, 0xa9, 0xf0, 0x00, 0xaa, 0x00, 0x60, 0xfa, 0x31, PID_FIRST_USABLE);      // PID_ZIP_ENCRYPTED
DEFINE_API_PKEY(PKEY_ZIP_METHOD,            ZipMethod               , 0xe88dcce0, 0xb7b3, 0x11d1, 0xa9, 0xf0, 0x00, 0xaa, 0x00, 0x60, 0xfa, 0x31, PID_FIRST_USABLE + 1);  // PID_ZIP_METHOD
DEFINE_API_PKEY(PKEY_ZIP_RATIO,             ZipRatio                , 0xe88dcce0, 0xb7b3, 0x11d1, 0xa9, 0xf0, 0x00, 0xaa, 0x00, 0x60, 0xfa, 0x31, PID_FIRST_USABLE + 2);  // PID_ZIP_RATIO
DEFINE_API_PKEY(PKEY_ZIP_CRC32,             ZipCRC32                , 0xe88dcce0, 0xb7b3, 0x11d1, 0xa9, 0xf0, 0x00, 0xaa, 0x00, 0x60, 0xfa, 0x31, PID_FIRST_USABLE + 3);  // PID_ZIP_CRC32
DEFINE_API_PKEY(PKEY_ZIP_COMPRESSEDSIZE,    ZipCompressedSize       , 0xe88dcce0, 0xb7b3, 0x11d1, 0xa9, 0xf0, 0x00, 0xaa, 0x00, 0x60, 0xfa, 0x31, PID_FIRST_USABLE + 4);  // PID_ZIP_COMPRESSEDSIZE

// Offline file Property Keys
// PSGUID_OFFLINE {0x4e9cfc01, 0x5d36, 0x406a, 0x83, 0xcd, 0x4e, 0x74, 0x23, 0x92, 0x36, 0x04}
DEFINE_API_PKEY(PKEY_OFFLINE_SYNCTIME,      OfflineSyncTime         , 0x4e9cfc01, 0x5d36, 0x406a, 0x83, 0xcd, 0x4e, 0x74, 0x23, 0x92, 0x36, 0x04, PID_FIRST_USABLE);      // PID_OFFLINE_SYNCTIME

// Font PKEYs
// PSFMTID_Font            { 0x4530D076, 0xB598, 0x4A81, 0x88, 0x13, 0x9B, 0x11, 0x28, 0x6E, 0xF6, 0xEA}
DEFINE_API_PKEY(PKEY_FONT_Embeddability,        FontEmbeddability       , 0x4530D076, 0xB598, 0x4A81, 0x88, 0x13, 0x9B, 0x11, 0x28, 0x6E, 0xF6, 0xEA, PID_FIRST_USABLE);

// Contacts Property Keys
DEFINE_API_PKEY(PKEY_CONTACT_JOBTITLE,        ContactJobTitle       , 0x176dc63c, 0x2688, 0x4e89, 0x81, 0x43, 0xa3, 0x47, 0x80, 0xf, 0x25, 0xe9, 6);
DEFINE_API_PKEY(PKEY_CONTACT_OFFICELOCATION,  ContactOfficeLocation , 0x176dc63c, 0x2688, 0x4e89, 0x81, 0x43, 0xa3, 0x47, 0x80, 0xf, 0x25, 0xe9, 7);
DEFINE_API_PKEY(PKEY_CONTACT_SID,             ContactSID            , 0x176dc63c, 0x2688, 0x4e89, 0x81, 0x43, 0xa3, 0x47, 0x80, 0xf, 0x25, 0xe9, 8);
DEFINE_API_PKEY(PKEY_CONTACT_SIDFriendly,     ContactSIDFriendly    , 0x176dc63c, 0x2688, 0x4e89, 0x81, 0x43, 0xa3, 0x47, 0x80, 0xf, 0x25, 0xe9, 9);
DEFINE_API_PKEY(PKEY_CONTACT_OBJECTGUID,      ContactObjectGuid     , 0x176dc63c, 0x2688, 0x4e89, 0x81, 0x43, 0xa3, 0x47, 0x80, 0xf, 0x25, 0xe9, 10);
DEFINE_API_PKEY(PKEY_CONTACT_ONLINESTATUS,    ContactOnlineStatus   , 0x176dc63c, 0x2688, 0x4e89, 0x81, 0x43, 0xa3, 0x47, 0x80, 0xf, 0x25, 0xe9, 14);

DEFINE_API_PKEY(PKEY_CONTACT_HOMEPHONE,             ContactHomePhone            , 0x176dc63c, 0x2688, 0x4e89, 0x81, 0x43, 0xa3, 0x47, 0x80, 0xf, 0x25, 0xe9, 20);
DEFINE_API_PKEY(PKEY_CONTACT_HOMEPHONE_COUNTRY,     ContactHomePhoneCountry     , 0x176dc63c, 0x2688, 0x4e89, 0x81, 0x43, 0xa3, 0x47, 0x80, 0xf, 0x25, 0xe9, 21);
DEFINE_API_PKEY(PKEY_CONTACT_HOMEPHONE_AREACODE,    ContactHomePhoneAreaCode    , 0x176dc63c, 0x2688, 0x4e89, 0x81, 0x43, 0xa3, 0x47, 0x80, 0xf, 0x25, 0xe9, 22);
DEFINE_API_PKEY(PKEY_CONTACT_HOMEPHONE_NUMBER,      ContactHomePhoneNumber      , 0x176dc63c, 0x2688, 0x4e89, 0x81, 0x43, 0xa3, 0x47, 0x80, 0xf, 0x25, 0xe9, 23);
DEFINE_API_PKEY(PKEY_CONTACT_HOMEPHONE_EXT,         ContactHomePhoneExtension   , 0x176dc63c, 0x2688, 0x4e89, 0x81, 0x43, 0xa3, 0x47, 0x80, 0xf, 0x25, 0xe9, 24);
DEFINE_API_PKEY(PKEY_CONTACT_PRIMEPHONE,            ContactPrimePhone           , 0x176dc63c, 0x2688, 0x4e89, 0x81, 0x43, 0xa3, 0x47, 0x80, 0xf, 0x25, 0xe9, 25);
DEFINE_API_PKEY(PKEY_CONTACT_PRIMEPHONE_COUNTRY,    ContactPrimePhoneCountry    , 0x176dc63c, 0x2688, 0x4e89, 0x81, 0x43, 0xa3, 0x47, 0x80, 0xf, 0x25, 0xe9, 26);
DEFINE_API_PKEY(PKEY_CONTACT_PRIMEPHONE_AREACODE,   ContactPrimePhoneAreaCode   , 0x176dc63c, 0x2688, 0x4e89, 0x81, 0x43, 0xa3, 0x47, 0x80, 0xf, 0x25, 0xe9, 27);
DEFINE_API_PKEY(PKEY_CONTACT_PRIMEPHONE_NUMBER,     ContactPrimePhoneNumber     , 0x176dc63c, 0x2688, 0x4e89, 0x81, 0x43, 0xa3, 0x47, 0x80, 0xf, 0x25, 0xe9, 28);
DEFINE_API_PKEY(PKEY_CONTACT_PRIMEPHONE_EXT,        ContactPrimePhoneExtension  , 0x176dc63c, 0x2688, 0x4e89, 0x81, 0x43, 0xa3, 0x47, 0x80, 0xf, 0x25, 0xe9, 29);
DEFINE_API_PKEY(PKEY_CONTACT_FAXPHONE,              ContactFaxPhone             , 0x176dc63c, 0x2688, 0x4e89, 0x81, 0x43, 0xa3, 0x47, 0x80, 0xf, 0x25, 0xe9, 30);
DEFINE_API_PKEY(PKEY_CONTACT_FAXPHONE_COUNTRY,      ContactFaxPhoneCountry      , 0x176dc63c, 0x2688, 0x4e89, 0x81, 0x43, 0xa3, 0x47, 0x80, 0xf, 0x25, 0xe9, 31);
DEFINE_API_PKEY(PKEY_CONTACT_FAXPHONE_AREACODE,     ContactFaxPhoneAreaCode     , 0x176dc63c, 0x2688, 0x4e89, 0x81, 0x43, 0xa3, 0x47, 0x80, 0xf, 0x25, 0xe9, 32);
DEFINE_API_PKEY(PKEY_CONTACT_FAXPHONE_NUMBER,       ContactFaxPhoneNumber       , 0x176dc63c, 0x2688, 0x4e89, 0x81, 0x43, 0xa3, 0x47, 0x80, 0xf, 0x25, 0xe9, 33);
DEFINE_API_PKEY(PKEY_CONTACT_FAXPHONE_EXT,          ContactFaxPhoneExtension    , 0x176dc63c, 0x2688, 0x4e89, 0x81, 0x43, 0xa3, 0x47, 0x80, 0xf, 0x25, 0xe9, 34);
DEFINE_API_PKEY(PKEY_CONTACT_CELLPHONE,             ContactCellPhone            , 0x176dc63c, 0x2688, 0x4e89, 0x81, 0x43, 0xa3, 0x47, 0x80, 0xf, 0x25, 0xe9, 35);
DEFINE_API_PKEY(PKEY_CONTACT_CELLPHONE_COUNTRY,     ContactCellPhoneCountry     , 0x176dc63c, 0x2688, 0x4e89, 0x81, 0x43, 0xa3, 0x47, 0x80, 0xf, 0x25, 0xe9, 36);
DEFINE_API_PKEY(PKEY_CONTACT_CELLPHONE_AREACODE,    ContactCellPhoneAreaCode    , 0x176dc63c, 0x2688, 0x4e89, 0x81, 0x43, 0xa3, 0x47, 0x80, 0xf, 0x25, 0xe9, 37);
DEFINE_API_PKEY(PKEY_CONTACT_CELLPHONE_NUMBER,      ContactCellPhoneNumber      , 0x176dc63c, 0x2688, 0x4e89, 0x81, 0x43, 0xa3, 0x47, 0x80, 0xf, 0x25, 0xe9, 38);
DEFINE_API_PKEY(PKEY_CONTACT_CELLPHONE_EXT,         ContactCellPhoneExtension   , 0x176dc63c, 0x2688, 0x4e89, 0x81, 0x43, 0xa3, 0x47, 0x80, 0xf, 0x25, 0xe9, 39);
DEFINE_API_PKEY(PKEY_CONTACT_WORKPHONE,             ContactWorkPhone            , 0x176dc63c, 0x2688, 0x4e89, 0x81, 0x43, 0xa3, 0x47, 0x80, 0xf, 0x25, 0xe9, 40);
DEFINE_API_PKEY(PKEY_CONTACT_WORKPHONE_COUNTRY,     ContactWorkPhoneCountry     , 0x176dc63c, 0x2688, 0x4e89, 0x81, 0x43, 0xa3, 0x47, 0x80, 0xf, 0x25, 0xe9, 41);
DEFINE_API_PKEY(PKEY_CONTACT_WORKPHONE_AREACODE,    ContactWorkPhoneAreaCode    , 0x176dc63c, 0x2688, 0x4e89, 0x81, 0x43, 0xa3, 0x47, 0x80, 0xf, 0x25, 0xe9, 42);
DEFINE_API_PKEY(PKEY_CONTACT_WORKPHONE_NUMBER,      ContactWorkPhoneNumber      , 0x176dc63c, 0x2688, 0x4e89, 0x81, 0x43, 0xa3, 0x47, 0x80, 0xf, 0x25, 0xe9, 43);
DEFINE_API_PKEY(PKEY_CONTACT_WORKPHONE_EXT,         ContactWorkPhoneExtension   , 0x176dc63c, 0x2688, 0x4e89, 0x81, 0x43, 0xa3, 0x47, 0x80, 0xf, 0x25, 0xe9, 44);
DEFINE_API_PKEY(PKEY_CONTACT_FULLNAME_GIVEN,        ContactFullNameGiven        , 0x176dc63c, 0x2688, 0x4e89, 0x81, 0x43, 0xa3, 0x47, 0x80, 0xf, 0x25, 0xe9, 45);
DEFINE_API_PKEY(PKEY_CONTACT_FULLNAME_SURNAME,      ContactFullNameSurname      , 0x176dc63c, 0x2688, 0x4e89, 0x81, 0x43, 0xa3, 0x47, 0x80, 0xf, 0x25, 0xe9, 46);
DEFINE_API_PKEY(PKEY_CONTACT_BIRTHDAY,              ContactBirthday             , 0x176dc63c, 0x2688, 0x4e89, 0x81, 0x43, 0xa3, 0x47, 0x80, 0xf, 0x25, 0xe9, 47);
DEFINE_API_PKEY(PKEY_CONTACT_PRIMEEMAIL,            ContactPrimeEmail           , 0x176dc63c, 0x2688, 0x4e89, 0x81, 0x43, 0xa3, 0x47, 0x80, 0xf, 0x25, 0xe9, 48);
DEFINE_API_PKEY(PKEY_CONTACT_PRIMEEMAIL_USERNAME,   ContactPrimeEmailUsername   , 0x176dc63c, 0x2688, 0x4e89, 0x81, 0x43, 0xa3, 0x47, 0x80, 0xf, 0x25, 0xe9, 49);
DEFINE_API_PKEY(PKEY_CONTACT_PRIMEEMAIL_DOMAIN,     ContactPrimeEmailDomain     , 0x176dc63c, 0x2688, 0x4e89, 0x81, 0x43, 0xa3, 0x47, 0x80, 0xf, 0x25, 0xe9, 50);
DEFINE_API_PKEY(PKEY_CONTACT_HOMEEMAIL,             ContactHomeEmail            , 0x176dc63c, 0x2688, 0x4e89, 0x81, 0x43, 0xa3, 0x47, 0x80, 0xf, 0x25, 0xe9, 51);
DEFINE_API_PKEY(PKEY_CONTACT_HOMEEMAIL_USERNAME,    ContactHomeEmailUsername    , 0x176dc63c, 0x2688, 0x4e89, 0x81, 0x43, 0xa3, 0x47, 0x80, 0xf, 0x25, 0xe9, 52);
DEFINE_API_PKEY(PKEY_CONTACT_HOMEEMAIL_DOMAIN,      ContactHomeEmailDomain      , 0x176dc63c, 0x2688, 0x4e89, 0x81, 0x43, 0xa3, 0x47, 0x80, 0xf, 0x25, 0xe9, 53);
DEFINE_API_PKEY(PKEY_CONTACT_WORKEMAIL,             ContactWorkEmail            , 0x176dc63c, 0x2688, 0x4e89, 0x81, 0x43, 0xa3, 0x47, 0x80, 0xf, 0x25, 0xe9, 54);
DEFINE_API_PKEY(PKEY_CONTACT_WORKEMAIL_USERNAME,    ContactWorkEmailUsername    , 0x176dc63c, 0x2688, 0x4e89, 0x81, 0x43, 0xa3, 0x47, 0x80, 0xf, 0x25, 0xe9, 55);
DEFINE_API_PKEY(PKEY_CONTACT_WORKEMAIL_DOMAIN,      ContactWorkEmailDomain      , 0x176dc63c, 0x2688, 0x4e89, 0x81, 0x43, 0xa3, 0x47, 0x80, 0xf, 0x25, 0xe9, 56);
DEFINE_API_PKEY(PKEY_CONTACT_PRIMEIM_ADDRESS,       ContactPrimeIMAddress       , 0x176dc63c, 0x2688, 0x4e89, 0x81, 0x43, 0xa3, 0x47, 0x80, 0xf, 0x25, 0xe9, 57);
DEFINE_API_PKEY(PKEY_CONTACT_PRIMEIM_PROVIDER,      ContactPrimeIMProvider      , 0x176dc63c, 0x2688, 0x4e89, 0x81, 0x43, 0xa3, 0x47, 0x80, 0xf, 0x25, 0xe9, 58);
DEFINE_API_PKEY(PKEY_CONTACT_HOMEIM_ADDRESS,        ContactHomeIMAddress        , 0x176dc63c, 0x2688, 0x4e89, 0x81, 0x43, 0xa3, 0x47, 0x80, 0xf, 0x25, 0xe9, 59);
DEFINE_API_PKEY(PKEY_CONTACT_HOMEIM_PROVIDER,       ContactHomeIMProvider       , 0x176dc63c, 0x2688, 0x4e89, 0x81, 0x43, 0xa3, 0x47, 0x80, 0xf, 0x25, 0xe9, 60);
DEFINE_API_PKEY(PKEY_CONTACT_WORKIM_ADDRESS,        ContactWorkIMAddress        , 0x176dc63c, 0x2688, 0x4e89, 0x81, 0x43, 0xa3, 0x47, 0x80, 0xf, 0x25, 0xe9, 61);
DEFINE_API_PKEY(PKEY_CONTACT_WORKIM_PROVIDER,       ContactWorkIMProvider       , 0x176dc63c, 0x2688, 0x4e89, 0x81, 0x43, 0xa3, 0x47, 0x80, 0xf, 0x25, 0xe9, 62);
DEFINE_API_PKEY(PKEY_CONTACT_PRIMEADDRESS_CITY,     ContactPrimeCity            , 0x176dc63c, 0x2688, 0x4e89, 0x81, 0x43, 0xa3, 0x47, 0x80, 0xf, 0x25, 0xe9, 63);
DEFINE_API_PKEY(PKEY_CONTACT_PRIMEADDRESS_ADMINDIV, ContactPrimeAdminDivision   , 0x176dc63c, 0x2688, 0x4e89, 0x81, 0x43, 0xa3, 0x47, 0x80, 0xf, 0x25, 0xe9, 64);
DEFINE_API_PKEY(PKEY_CONTACT_HOMEADDRESS_CITY,      ContactHomeCity             , 0x176dc63c, 0x2688, 0x4e89, 0x81, 0x43, 0xa3, 0x47, 0x80, 0xf, 0x25, 0xe9, 65);
DEFINE_API_PKEY(PKEY_CONTACT_HOMEADDRESS_ADMINDIV,  ContactHomeAdminDivision    , 0x176dc63c, 0x2688, 0x4e89, 0x81, 0x43, 0xa3, 0x47, 0x80, 0xf, 0x25, 0xe9, 66);
DEFINE_API_PKEY(PKEY_CONTACT_WORKADDRESS_CITY,      ContactWorkCity             , 0x176dc63c, 0x2688, 0x4e89, 0x81, 0x43, 0xa3, 0x47, 0x80, 0xf, 0x25, 0xe9, 67);
DEFINE_API_PKEY(PKEY_CONTACT_WORKADDRESS_ADMINDIV,  ContactWorkAdminDivision    , 0x176dc63c, 0x2688, 0x4e89, 0x81, 0x43, 0xa3, 0x47, 0x80, 0xf, 0x25, 0xe9, 68);
DEFINE_API_PKEY(PKEY_CONTACT_TITLE,                 ContactTitle                , 0x176dc63c, 0x2688, 0x4e89, 0x81, 0x43, 0xa3, 0x47, 0x80, 0xf, 0x25, 0xe9, 69);
DEFINE_API_PKEY(PKEY_CONTACT_GIVENNAME,             ContactGivenName            , 0x176dc63c, 0x2688, 0x4e89, 0x81, 0x43, 0xa3, 0x47, 0x80, 0xf, 0x25, 0xe9, 70);
DEFINE_API_PKEY(PKEY_CONTACT_MIDDLENAME,            ContactMiddleName           , 0x176dc63c, 0x2688, 0x4e89, 0x81, 0x43, 0xa3, 0x47, 0x80, 0xf, 0x25, 0xe9, 71);
DEFINE_API_PKEY(PKEY_CONTACT_SURNAME,               ContactSurname              , 0x176dc63c, 0x2688, 0x4e89, 0x81, 0x43, 0xa3, 0x47, 0x80, 0xf, 0x25, 0xe9, 72);
DEFINE_API_PKEY(PKEY_CONTACT_SUFFIX,                ContactSuffix               , 0x176dc63c, 0x2688, 0x4e89, 0x81, 0x43, 0xa3, 0x47, 0x80, 0xf, 0x25, 0xe9, 73);
DEFINE_API_PKEY(PKEY_CONTACT_NICKNAME,              ContactNickname             , 0x176dc63c, 0x2688, 0x4e89, 0x81, 0x43, 0xa3, 0x47, 0x80, 0xf, 0x25, 0xe9, 74);
DEFINE_API_PKEY(PKEY_CONTACT_PHONES,                ContactPhones               , 0x176dc63c, 0x2688, 0x4e89, 0x81, 0x43, 0xa3, 0x47, 0x80, 0xf, 0x25, 0xe9, 75);
DEFINE_API_PKEY(PKEY_CONTACT_EMAILS,                ContactEmails               , 0x176dc63c, 0x2688, 0x4e89, 0x81, 0x43, 0xa3, 0x47, 0x80, 0xf, 0x25, 0xe9, 76);


// ADSIFolder Keys
DEFINE_API_PKEY(PKEY_ADSIFOLDER_DOMAIN,       ADSIFolderDomain      , 0x817a4013, 0x3f04, 0x4d5c, 0xbd, 0xc7, 0xe, 0x8e, 0x7, 0x88, 0x89, 0xf4, 2);
DEFINE_API_PKEY(PKEY_ADSIFOLDER_ANR,          ADSIFolderANR         , 0x817a4013, 0x3f04, 0x4d5c, 0xbd, 0xc7, 0xe, 0x8e, 0x7, 0x88, 0x89, 0xf4, 3);
DEFINE_API_PKEY(PKEY_ADSIFOLDER_TYPE,         ADSIFolderType        , 0x817a4013, 0x3f04, 0x4d5c, 0xbd, 0xc7, 0xe, 0x8e, 0x7, 0x88, 0x89, 0xf4, 4);
DEFINE_API_PKEY(PKEY_ADSIFOLDER_SID,          ADSIFolderSid         , 0x817a4013, 0x3f04, 0x4d5c, 0xbd, 0xc7, 0xe, 0x8e, 0x7, 0x88, 0x89, 0xf4, 5);

// property list PKEYs (define what type of property list to query for from IShellItem2::GetPropertyDescriptionList and IShellItemArray::GetPropertyDescriptionList)
// PSGUID_PROPLISTTYPE     { 0xc9944a21, 0xa406, 0x48fe, 0x82, 0x25, 0xae, 0xc7, 0xe2, 0x4c, 0x21, 0x1b}
DEFINE_API_PKEY(PKEY_PROPLIST_PROPERTYPAGE,             PropListPropertyPage,           0xc9944a21, 0xa406, 0x48fe, 0x82, 0x25, 0xae, 0xc7, 0xe2, 0x4c, 0x21, 0x1b, 2); // PID_PROPLIST_PREVIEW
DEFINE_API_PKEY(PKEY_PROPLIST_TILEINFO,                 PropListTileInfo,               0xc9944a21, 0xa406, 0x48fe, 0x82, 0x25, 0xae, 0xc7, 0xe2, 0x4c, 0x21, 0x1b, 3); // PID_PROPLIST_TILEINFO
DEFINE_API_PKEY(PKEY_PROPLIST_INFOTIP,                  PropListInfoTip,                0xc9944a21, 0xa406, 0x48fe, 0x82, 0x25, 0xae, 0xc7, 0xe2, 0x4c, 0x21, 0x1b, 4); // PID_PROPLIST_INFOTIP
DEFINE_API_PKEY(PKEY_PROPLIST_QUICKTIP,                 PropListQuickTip,               0xc9944a21, 0xa406, 0x48fe, 0x82, 0x25, 0xae, 0xc7, 0xe2, 0x4c, 0x21, 0x1b, 5); // PID_PROPLIST_QUICKTIP
DEFINE_API_PKEY(PKEY_PROPLIST_PREVIEWPANE_TITLE,        PropListPreviewPaneTitle,       0xc9944a21, 0xa406, 0x48fe, 0x82, 0x25, 0xae, 0xc7, 0xe2, 0x4c, 0x21, 0x1b, 6); // PID_PROPLIST_TITLE
DEFINE_API_PKEY(PKEY_PROPLIST_PREVIEWPANE_SUMMARYINFO,  PropListPreviewPaneSummaryInfo, 0xc9944a21, 0xa406, 0x48fe, 0x82, 0x25, 0xae, 0xc7, 0xe2, 0x4c, 0x21, 0x1b, 7); // PID_PROPLIST_MINIINFO
DEFINE_API_PKEY(PKEY_PROPLIST_PREVIEWPANE_DETAILS,      PropListPreviewPaneDetails,     0xc9944a21, 0xa406, 0x48fe, 0x82, 0x25, 0xae, 0xc7, 0xe2, 0x4c, 0x21, 0x1b, 8); // PID_PROPLIST_BESTOF
DEFINE_API_PKEY(PKEY_PROPLIST_EXTENDEDTILEINFO,         PropListExtendedTileInfo,       0xc9944a21, 0xa406, 0x48fe, 0x82, 0x25, 0xae, 0xc7, 0xe2, 0x4c, 0x21, 0x1b, 9);
DEFINE_API_PKEY(PKEY_PROPLIST_CONFIRMPROMPT_PROPERTIES, PropListConfirmPromptProperties,0xc9944a21, 0xa406, 0x48fe, 0x82, 0x25, 0xae, 0xc7, 0xe2, 0x4c, 0x21, 0x1b, 10);
DEFINE_API_PKEY(PKEY_PROPLIST_MERGEPROMPT_PROPERTIES,   PropListMergePromptProperties,  0xc9944a21, 0xa406, 0x48fe, 0x82, 0x25, 0xae, 0xc7, 0xe2, 0x4c, 0x21, 0x1b, 11);

// PKEYs relating to URLs.  Used by IE History.
// {5CBF2787-48CF-4208-B90E-EE5E5D420294}
DEFINE_API_PKEY(PKEY_URL,                   Url,                    0x5cbf2787, 0x48cf, 0x4208, 0xb9, 0xe, 0xee, 0x5e, 0x5d, 0x42, 0x2, 0x94, 2);
DEFINE_API_PKEY(PKEY_URLDomain,             UrlDomain,              0x5cbf2787, 0x48cf, 0x4208, 0xb9, 0xe, 0xee, 0x5e, 0x5d, 0x42, 0x2, 0x94, 3);
DEFINE_API_PKEY(PKEY_URLDaysAgo,            UrlDaysAgo,             0x5cbf2787, 0x48cf, 0x4208, 0xb9, 0xe, 0xee, 0x5e, 0x5d, 0x42, 0x2, 0x94, 5);
DEFINE_API_PKEY(PKEY_URLSubscriptionCookie, UrlSubscriptionCookie,  0x5cbf2787, 0x48cf, 0x4208, 0xb9, 0xe, 0xee, 0x5e, 0x5d, 0x42, 0x2, 0x94, 6);
DEFINE_API_PKEY(PKEY_URLTracking,           URLTracking,            0x5cbf2787, 0x48cf, 0x4208, 0xb9, 0xe, 0xee, 0x5e, 0x5d, 0x42, 0x2, 0x94, 7);
DEFINE_API_PKEY(PKEY_CodePage,              CodePage,               0x5cbf2787, 0x48cf, 0x4208, 0xb9, 0xe, 0xee, 0x5e, 0x5d, 0x42, 0x2, 0x94, 8);
DEFINE_API_PKEY(PKEY_IconIndex,             IconIndex,              0x5cbf2787, 0x48cf, 0x4208, 0xb9, 0xe, 0xee, 0x5e, 0x5d, 0x42, 0x2, 0x94, 9);
DEFINE_API_PKEY(PKEY_IconFile,              IconFile,               0x5cbf2787, 0x48cf, 0x4208, 0xb9, 0xe, 0xee, 0x5e, 0x5d, 0x42, 0x2, 0x94, 10);
DEFINE_API_PKEY(PKEY_PIDISFFlags,           PIDISFFlags,            0x5cbf2787, 0x48cf, 0x4208, 0xb9, 0xe, 0xee, 0x5e, 0x5d, 0x42, 0x2, 0x94, 11);
DEFINE_API_PKEY(PKEY_CollaborationServer,   CollaborationServer,    0x5cbf2787, 0x48cf, 0x4208, 0xb9, 0xe, 0xee, 0x5e, 0x5d, 0x42, 0x2, 0x94, 12);
DEFINE_API_PKEY(PKEY_Hotkey,                Hotkey,                 0x5cbf2787, 0x48cf, 0x4208, 0xb9, 0xe, 0xee, 0x5e, 0x5d, 0x42, 0x2, 0x94, 13);
DEFINE_API_PKEY(PKEY_ShowCommand,           ShowCommand,            0x5cbf2787, 0x48cf, 0x4208, 0xb9, 0xe, 0xee, 0x5e, 0x5d, 0x42, 0x2, 0x94, 14);
DEFINE_API_PKEY(PKEY_LastVisit,             LastVisit,              0x5cbf2787, 0x48cf, 0x4208, 0xb9, 0xe, 0xee, 0x5e, 0x5d, 0x42, 0x2, 0x94, 15);
DEFINE_API_PKEY(PKEY_Hash,                  Hash,                   0x5cbf2787, 0x48cf, 0x4208, 0xb9, 0xe, 0xee, 0x5e, 0x5d, 0x42, 0x2, 0x94, 16);
DEFINE_API_PKEY(PKEY_VisitCount,            VisitCount,             0x5cbf2787, 0x48cf, 0x4208, 0xb9, 0xe, 0xee, 0x5e, 0x5d, 0x42, 0x2, 0x94, 17);

// Internet Site PKEYs {0x000214A1L, 0x0000, 0x0000, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46}
// Legacy.  TODO: Can we get rid of this?
DEFINE_API_PKEY(PKEY_STATUS,            Status          , 0x000214A1L, 0, 0, 0xC0,0,0,0,0,0,0,0x46, 9);

// SharePoint folder
// PSGUID_SHAREPOINT     { 0x78ec0533, 0xbe1c, 0x4b92, 0xbd, 0xd5, 0x38, 0x1a, 0x09, 0x6b, 0x66, 0x44}
DEFINE_API_PKEY(PKEY_SHAREPOINT_URLDATA,      SharepointUrlData,     0x78ec0533, 0xbe1c, 0x4b92, 0xbd, 0xd5, 0x38, 0x1a, 0x09, 0x6b, 0x66, 0x44, PID_FIRST_USABLE + 2); // PID_SHAREPOINT_WEB_ROLE
DEFINE_API_PKEY(PKEY_SHAREPOINT_LISTID,       SharePointListID,      0x78ec0533, 0xbe1c, 0x4b92, 0xbd, 0xd5, 0x38, 0x1a, 0x09, 0x6b, 0x66, 0x44, PID_FIRST_USABLE + 3);
DEFINE_API_PKEY(PKEY_SHAREPOINT_PARSINGNAME,  SharePointParsingName, 0x78ec0533, 0xbe1c, 0x4b92, 0xbd, 0xd5, 0x38, 0x1a, 0x09, 0x6b, 0x66, 0x44, PID_FIRST_USABLE + 4);
DEFINE_API_PKEY(PKEY_SHAREPOINT_SITEURL,      SharePointSiteUrl,     0x78ec0533, 0xbe1c, 0x4b92, 0xbd, 0xd5, 0x38, 0x1a, 0x09, 0x6b, 0x66, 0x44, PID_FIRST_USABLE + 5);
DEFINE_API_PKEY(PKEY_SHAREPOINT_PATH,         SharePointPath,        0x78ec0533, 0xbe1c, 0x4b92, 0xbd, 0xd5, 0x38, 0x1a, 0x09, 0x6b, 0x66, 0x44, PID_FIRST_USABLE + 6);

// Extensions
// PSGUID_Extensions {0x3f5d9b45, 0x5e9f, 0x4d5c, 0x8a, 0x5e, 0x40, 0x31, 0x81, 0xbf, 0x17, 0x7b}
DEFINE_API_PKEY(PKEY_Extensions_Type,          ExtensionsType         , 0x3f5d9b45, 0x5e9f, 0x4d5c, 0x8a, 0x5e, 0x40, 0x31, 0x81, 0xbf, 0x17, 0x7b, 2);
DEFINE_API_PKEY(PKEY_Extensions_LastUsed,      ExtensionsLastUsed     , 0x3f5d9b45, 0x5e9f, 0x4d5c, 0x8a, 0x5e, 0x40, 0x31, 0x81, 0xbf, 0x17, 0x7b, 3);
DEFINE_API_PKEY(PKEY_Extensions_UsedCount,     ExtensionsUsedCount    , 0x3f5d9b45, 0x5e9f, 0x4d5c, 0x8a, 0x5e, 0x40, 0x31, 0x81, 0xbf, 0x17, 0x7b, 4);
DEFINE_API_PKEY(PKEY_Extensions_BlockedCount,  ExtensionsBlockedCount , 0x3f5d9b45, 0x5e9f, 0x4d5c, 0x8a, 0x5e, 0x40, 0x31, 0x81, 0xbf, 0x17, 0x7b, 5);
DEFINE_API_PKEY(PKEY_Clsid,                    Clsid                  , 0x3f5d9b45, 0x5e9f, 0x4d5c, 0x8a, 0x5e, 0x40, 0x31, 0x81, 0xbf, 0x17, 0x7b, 6);
DEFINE_API_PKEY(PKEY_Enabled,                  Enabled                , 0x3f5d9b45, 0x5e9f, 0x4d5c, 0x8a, 0x5e, 0x40, 0x31, 0x81, 0xbf, 0x17, 0x7b, 7);
DEFINE_API_PKEY(PKEY_CheckState,               CheckState             , 0x3f5d9b45, 0x5e9f, 0x4d5c, 0x8a, 0x5e, 0x40, 0x31, 0x81, 0xbf, 0x17, 0x7b, 8);
DEFINE_API_PKEY(PKEY_Extensions_Suspect,       ExtensionsSuspect      , 0x3f5d9b45, 0x5e9f, 0x4d5c, 0x8a, 0x5e, 0x40, 0x31, 0x81, 0xbf, 0x17, 0x7b, 9);


// File Download SCIDs
// PSGUID_FileDownload {0xd5207d3e, 0xf5d6, 0x43dc, 0xb1, 0x98, 0xb8, 0xcd, 0x7d, 0xfb, 0x21, 0xf3}
DEFINE_API_PKEY(PKEY_FileDownload_Priority,      FileDownloadPriority     , 0xd5207d3e, 0xf5d6, 0x43dc, 0xb1, 0x98, 0xb8, 0xcd, 0x7d, 0xfb, 0x21, 0xf3, 2);  // PID_FileDownload_Priority
DEFINE_API_PKEY(PKEY_FileDownload_State,         FileDownloadState        , 0xd5207d3e, 0xf5d6, 0x43dc, 0xb1, 0x98, 0xb8, 0xcd, 0x7d, 0xfb, 0x21, 0xf3, 3);  // PID_FileDownload_State
DEFINE_API_PKEY(PKEY_FileDownload_Progress,      FileDownloadProgress     , 0xd5207d3e, 0xf5d6, 0x43dc, 0xb1, 0x98, 0xb8, 0xcd, 0x7d, 0xfb, 0x21, 0xf3, 4);  // PID_FileDownload_Progress
DEFINE_API_PKEY(PKEY_FileDownload_TimeRemaining, FileDownloadTimeRemaining, 0xd5207d3e, 0xf5d6, 0x43dc, 0xb1, 0x98, 0xb8, 0xcd, 0x7d, 0xfb, 0x21, 0xf3, 5);  // PID_FileDownload_TimeRemaining
DEFINE_API_PKEY(PKEY_FileDownload_Url,           FileDownloadUrl          , 0xd5207d3e, 0xf5d6, 0x43dc, 0xb1, 0x98, 0xb8, 0xcd, 0x7d, 0xfb, 0x21, 0xf3, 8);  // PID_FileDownload_Url

// PSGUID_SyncMgr {0x7bd5533e, 0xaf15, 0x44db, 0xb8, 0xc8, 0xbd, 0x66, 0x24, 0xe1, 0xd0, 0x32}
DEFINE_API_PKEY(PKEY_SyncMgr_HandlerID, SyncMgrHandlerID,   0x7bd5533e, 0xaf15, 0x44db, 0xb8, 0xc8, 0xbd, 0x66, 0x24, 0xe1, 0xd0, 0x32, PID_FIRST_USABLE);      // VT_CLSID
DEFINE_API_PKEY(PKEY_SyncMgr_ItemID,    SyncMgrItemID,      0x7bd5533e, 0xaf15, 0x44db, 0xb8, 0xc8, 0xbd, 0x66, 0x24, 0xe1, 0xd0, 0x32, PID_FIRST_USABLE + 1);  // VT_CLSID

// Message (E-mail, NewsPosts, etc.) SCIDs
DEFINE_API_PKEY(PKEY_TOLine,            TOLine           , 0x9c1fcf74, 0x2d97, 0x41ba, 0xb4, 0xae, 0xcb, 0x2e, 0x36, 0x61, 0xa6, 0xe4, 1);  // PID_TOLINE
DEFINE_API_PKEY(PKEY_CCLine,            CCLine           , 0x9c1fcf74, 0x2d97, 0x41ba, 0xb4, 0xae, 0xcb, 0x2e, 0x36, 0x61, 0xa6, 0xe4, 2);  // PID_CCLINE
DEFINE_API_PKEY(PKEY_NormalizedSubject, NormalizedSubject       , 0x9c1fcf74, 0x2d97, 0x41ba, 0xb4, 0xae, 0xcb, 0x2e, 0x36, 0x61, 0xa6, 0xe4, 3);  // PID_NORMALIZEDSUBJECT
DEFINE_API_PKEY(PKEY_Read,              Read             , 0x9c1fcf74, 0x2d97, 0x41ba, 0xb4, 0xae, 0xcb, 0x2e, 0x36, 0x61, 0xa6, 0xe4, 4);  // PID_READ
DEFINE_API_PKEY(PKEY_Priority,          Priority         , 0x9c1fcf74, 0x2d97, 0x41ba, 0xb4, 0xae, 0xcb, 0x2e, 0x36, 0x61, 0xa6, 0xe4, 5);  // PID_PRIORITY
DEFINE_API_PKEY(PKEY_ReceivedTime,      ReceivedTime     , 0x9c1fcf74, 0x2d97, 0x41ba, 0xb4, 0xae, 0xcb, 0x2e, 0x36, 0x61, 0xa6, 0xe4, 6);  // PID_RECEIVEDTIME
DEFINE_API_PKEY(PKEY_NewsgroupName,     NewsgroupName    , 0x9c1fcf74, 0x2d97, 0x41ba, 0xb4, 0xae, 0xcb, 0x2e, 0x36, 0x61, 0xa6, 0xe4, 7);  // PID_NEWSGROUPNAME
DEFINE_API_PKEY(PKEY_HasAttachments,    HasAttachments   , 0x9c1fcf74, 0x2d97, 0x41ba, 0xb4, 0xae, 0xcb, 0x2e, 0x36, 0x61, 0xa6, 0xe4, 8);  // PID_HASATTACHMENTS
DEFINE_API_PKEY(PKEY_WatchIgnore,       WatchIgnore      , 0x9c1fcf74, 0x2d97, 0x41ba, 0xb4, 0xae, 0xcb, 0x2e, 0x36, 0x61, 0xa6, 0xe4, 9);  // PID_WATCHIGNORE
DEFINE_API_PKEY(PKEY_AccountName,       AccountName      , 0x9c1fcf74, 0x2d97, 0x41ba, 0xb4, 0xae, 0xcb, 0x2e, 0x36, 0x61, 0xa6, 0xe4, 10); // PID_MESSAGE_ACCOUNTNAME
// The following message properties can go away when the Message Library can rename the column headers
DEFINE_API_PKEY(PKEY_MessageSent,       MessageSent      , 0x9c1fcf74, 0x2d97, 0x41ba, 0xb4, 0xae, 0xcb, 0x2e, 0x36, 0x61, 0xa6, 0xe4, 11); // PID_MESSAGESENT  // Same as PKEY_CREATETIME
DEFINE_API_PKEY(PKEY_MessageFrom,       MessageFrom      , 0x9c1fcf74, 0x2d97, 0x41ba, 0xb4, 0xae, 0xcb, 0x2e, 0x36, 0x61, 0xa6, 0xe4, 12); // PID_MESSAGEFROM  // Same as PKEY_Author
DEFINE_API_PKEY(PKEY_MessageType,       MessageType      , 0x9c1fcf74, 0x2d97, 0x41ba, 0xb4, 0xae, 0xcb, 0x2e, 0x36, 0x61, 0xa6, 0xe4, 13); // PID_MESSAGETYPE
DEFINE_API_PKEY(PKEY_MessageSubject,    MessageSubject   , 0x9c1fcf74, 0x2d97, 0x41ba, 0xb4, 0xae, 0xcb, 0x2e, 0x36, 0x61, 0xa6, 0xe4, 14);  // PID_SUBJECT
DEFINE_API_PKEY(PKEY_MessageFromAddress, MessageFromAddress, 0x9c1fcf74, 0x2d97, 0x41ba, 0xb4, 0xae, 0xcb, 0x2e, 0x36, 0x61, 0xa6, 0xe4, 15);
DEFINE_API_PKEY(PKEY_MessageToAddress,  MessageToAddress , 0x9c1fcf74, 0x2d97, 0x41ba, 0xb4, 0xae, 0xcb, 0x2e, 0x36, 0x61, 0xa6, 0xe4, 16);
DEFINE_API_PKEY(PKEY_MessageReceived,   MessageReceived  , 0x9c1fcf74, 0x2d97, 0x41ba, 0xb4, 0xae, 0xcb, 0x2e, 0x36, 0x61, 0xa6, 0xe4, 17);

// Other common Message Properties:
// microsoft/CreateTime: Message Create Time
// microsoft/Size: Message Size
// microsoft/Author: Message FROM Line


#ifndef _API_PKEYS_ONLY
// Property group GUIDs. Defines collections of properties for display in propertyui
DEFINE_GUID(PGID_Description, 0x8969b275, 0x9475, 0x4e00, 0xa8, 0x87, 0xff, 0x93, 0xb8, 0xb4, 0x1e, 0x44);
DEFINE_GUID(PGID_Image,       0xe3690a87, 0x0fa8, 0x4a2a, 0x9a, 0x9f, 0xfc, 0xe8, 0x82, 0x70, 0x55, 0xac);
DEFINE_GUID(PGID_Audio,       0x2804d469, 0x788f, 0x48aa, 0x85, 0x70, 0x71, 0xb9, 0xc1, 0x87, 0xe1, 0x38);
DEFINE_GUID(PGID_Music,       0x68dd6094, 0x7216, 0x40f1, 0xa0, 0x29, 0x43, 0xfe, 0x71, 0x27, 0x04, 0x3f);
DEFINE_GUID(PGID_Video,       0xbebe0920, 0x7671, 0x4c54, 0xa3, 0xeb, 0x49, 0xfd, 0xdf, 0xc1, 0x91, 0xee);
DEFINE_GUID(PGID_Fax,         0x2a72f877, 0x13ec, 0x4939, 0xbe, 0x65, 0xcc, 0x3a, 0xaa, 0xfb, 0xbe, 0xb8);
DEFINE_GUID(PGID_Contact,     0xdf975fd3, 0x250a, 0x4004, 0x85, 0x8f, 0x34, 0xe2, 0x9a, 0x3e, 0x37, 0xaa);
#endif

// PSGUID_TASKDETAILS {0xcea379df, 0x6aca, 0x4157, 0x83, 0xcc, 0xb8, 0x33, 0x47, 0x46, 0x48, 0x8a}
DEFINE_API_PKEY(PKEY_Task_IconPath,             TaskIconPath            , 0xcea379df, 0x6aca, 0x4157, 0x83, 0xcc, 0xb8, 0x33, 0x47, 0x46, 0x48, 0x8a, 2);  // PID_Task_IconPath
DEFINE_API_PKEY(PKEY_Task_Category,             TaskCategory            , 0xcea379df, 0x6aca, 0x4157, 0x83, 0xcc, 0xb8, 0x33, 0x47, 0x46, 0x48, 0x8a, 3);  // PID_Task_Category
DEFINE_API_PKEY(PKEY_Task_Collection,           TaskCollection          , 0xcea379df, 0x6aca, 0x4157, 0x83, 0xcc, 0xb8, 0x33, 0x47, 0x46, 0x48, 0x8a, 6);  // PID_Task_Collection

// PSGUID_SearchProp {0x87cd2ea1, 0xc0e1, 0x494f, 0xb4, 0xf9, 0xb5, 0x33, 0x3e, 0xb0, 0x12, 0xdd}
DEFINE_API_PKEY(PKEY_SearchProp_MessageID,          SearchPropMessageID,            0x87cd2ea1, 0xc0e1, 0x494f, 0xb4, 0xf9, 0xb5, 0x33, 0x3e, 0xb0, 0x12, 0xdd, 2);
DEFINE_API_PKEY(PKEY_SearchProp_EmailFilePath,      SearchPropEmailFilePath,        0x87cd2ea1, 0xc0e1, 0x494f, 0xb4, 0xf9, 0xb5, 0x33, 0x3e, 0xb0, 0x12, 0xdd, 3);
DEFINE_API_PKEY(PKEY_SearchProp_LoggingId,          SearchPropLoggingId,            0x87cd2ea1, 0xc0e1, 0x494f, 0xb4, 0xf9, 0xb5, 0x33, 0x3e, 0xb0, 0x12, 0xdd, 4);
DEFINE_API_PKEY(PKEY_SearchProp_SessionId,          SearchPropSessionId,            0x87cd2ea1, 0xc0e1, 0x494f, 0xb4, 0xf9, 0xb5, 0x33, 0x3e, 0xb0, 0x12, 0xdd, 5);
DEFINE_API_PKEY(PKEY_SearchProp_Summary,            SearchPropSummary,              0x87cd2ea1, 0xc0e1, 0x494f, 0xb4, 0xf9, 0xb5, 0x33, 0x3e, 0xb0, 0x12, 0xdd, 6);  // VT_LPSTR

// #define PSGUID_ADFINFORMATION   { 0x26b8d54f, 0x371f, 0x4aeb, 0x8a, 0x84, 0x92, 0x24, 0xae, 0xa4, 0xd4, 0xa }
DEFINE_API_PKEY(PKEY_ADFAppID,               AdfAppID,               0x26b8d54f, 0x371f, 0x4aeb, 0x8a, 0x84, 0x92, 0x24, 0xae, 0xa4, 0xd4, 0xa, 0x00000010L); // PID_ADF_APPID               VT_CLSID: Application Identifier
DEFINE_API_PKEY(PKEY_ADFAppName,             AdfAppName,             0x26b8d54f, 0x371f, 0x4aeb, 0x8a, 0x84, 0x92, 0x24, 0xae, 0xa4, 0xd4, 0xa, 0x00000011L); // PID_ADF_APPNAME             VT_BSTR: Application Name
DEFINE_API_PKEY(PKEY_ADFSummary,             AdfSummary,             0x26b8d54f, 0x371f, 0x4aeb, 0x8a, 0x84, 0x92, 0x24, 0xae, 0xa4, 0xd4, 0xa, 0x00000012L); // PID_ADF_SUMMARY             VT_BSTR: Summary Text
DEFINE_API_PKEY(PKEY_ADFDescription,         AdfDescription,         0x26b8d54f, 0x371f, 0x4aeb, 0x8a, 0x84, 0x92, 0x24, 0xae, 0xa4, 0xd4, 0xa, 0x00000013L); // PID_ADF_DESCRIPTION         VT_BSTR: Description Text (extended info)
DEFINE_API_PKEY(PKEY_ADFReleaseDate,         AdfReleaseDate,         0x26b8d54f, 0x371f, 0x4aeb, 0x8a, 0x84, 0x92, 0x24, 0xae, 0xa4, 0xd4, 0xa, 0x00000014L); // PID_ADF_RELEASEDATE         VT_BSTR: Release Date
DEFINE_API_PKEY(PKEY_ADFProductFamilyID,     AdfProductFamilyID,     0x26b8d54f, 0x371f, 0x4aeb, 0x8a, 0x84, 0x92, 0x24, 0xae, 0xa4, 0xd4, 0xa, 0x00000015L); // PID_ADF_PRODFAMILYID        VT_CLSID: Franchise ID
DEFINE_API_PKEY(PKEY_ADFPublisher,           AdfPublisher,           0x26b8d54f, 0x371f, 0x4aeb, 0x8a, 0x84, 0x92, 0x24, 0xae, 0xa4, 0xd4, 0xa, 0x00000016L); // PID_ADF_PUBLISHER           VT_BSTR | VT_ARRAY: Formatted list of one or more publisher names
DEFINE_API_PKEY(PKEY_ADFDeveloper,           AdfDeveloper,           0x26b8d54f, 0x371f, 0x4aeb, 0x8a, 0x84, 0x92, 0x24, 0xae, 0xa4, 0xd4, 0xa, 0x00000017L); // PID_ADF_DEVELOPER           VT_BSTR | VT_ARRAY: Formatted list of one or more developer names
DEFINE_API_PKEY(PKEY_ADFAppURL,              AdfAppUrl,              0x26b8d54f, 0x371f, 0x4aeb, 0x8a, 0x84, 0x92, 0x24, 0xae, 0xa4, 0xd4, 0xa, 0x00000018L); // PID_ADF_APPURL              VT_BSTR: URL of application home page
DEFINE_API_PKEY(PKEY_ADFGenre,               AdfGenre,               0x26b8d54f, 0x371f, 0x4aeb, 0x8a, 0x84, 0x92, 0x24, 0xae, 0xa4, 0xd4, 0xa, 0x00000019L); // PID_ADF_GENRE               VT_BSTR | VT_ARRAY: Formatted list of one or more genres
DEFINE_API_PKEY(PKEY_ADFDisplayName,         AdfDisplayName,         0x26b8d54f, 0x371f, 0x4aeb, 0x8a, 0x84, 0x92, 0x24, 0xae, 0xa4, 0xd4, 0xa, 0x0000001AL); // PID_ADF_DISPLAYNAME         VT_BSTR: Display Name for application
DEFINE_API_PKEY(PKEY_ADFParentApplicationID, AdfParentApplicationID, 0x26b8d54f, 0x371f, 0x4aeb, 0x8a, 0x84, 0x92, 0x24, 0xae, 0xa4, 0xd4, 0xa, 0x0000001BL); // PID_ADF_PARENTID            VT_CLSID: parent application ID
DEFINE_API_PKEY(PKEY_ADFMetaDataVersion,     AdfMetaDataVersion,     0x26b8d54f, 0x371f, 0x4aeb, 0x8a, 0x84, 0x92, 0x24, 0xae, 0xa4, 0xd4, 0xa, 0x0000001CL); // PID_ADF_METADATAVERSION     VT_BSTR: Version of the Metadata
DEFINE_API_PKEY(PKEY_ADFLocale,              AdfLocale,              0x26b8d54f, 0x371f, 0x4aeb, 0x8a, 0x84, 0x92, 0x24, 0xae, 0xa4, 0xd4, 0xa, 0x0000001DL); // PID_ADF_LOCALE              VT_BSTR: Locale this file supports
DEFINE_API_PKEY(PKEY_ADFIconFileName,        AdfIconFileName,        0x26b8d54f, 0x371f, 0x4aeb, 0x8a, 0x84, 0x92, 0x24, 0xae, 0xa4, 0xd4, 0xa, 0x0000001EL); // PID_ADF_ICONFILENAME              VT_BSTR: Name of the icon
DEFINE_API_PKEY(PKEY_ADFIconResourceID,      AdfIconResourceID,      0x26b8d54f, 0x371f, 0x4aeb, 0x8a, 0x84, 0x92, 0x24, 0xae, 0xa4, 0xd4, 0xa, 0x0000001FL); // PID_ADF_ICONRESOURCEID            VT_INT: id of the icon. Maybe negative
DEFINE_API_PKEY(PKEY_ADFThumbnailFileName,   AdfThumbnailFileName,   0x26b8d54f, 0x371f, 0x4aeb, 0x8a, 0x84, 0x92, 0x24, 0xae, 0xa4, 0xd4, 0xa, 0x00000020L); // PID_ADF_THUMBNAILFILENAME         VT_BSTR: Name of the thumbnail
DEFINE_API_PKEY(PKEY_ADFThumbnailResourceID, AdfThumbnailResourceID, 0x26b8d54f, 0x371f, 0x4aeb, 0x8a, 0x84, 0x92, 0x24, 0xae, 0xa4, 0xd4, 0xa, 0x00000021L); // PID_ADF_THUMBNAILRESOURCEID       VT_INT: id of the thumbnail. May be negative
DEFINE_API_PKEY(PKEY_ADFThumbnailResourceType,  AdfThumbnailResourceType,   0x26b8d54f, 0x371f, 0x4aeb, 0x8a, 0x84, 0x92, 0x24, 0xae, 0xa4, 0xd4, 0xa, 0x00000022L); // PID_ADF_THUMBNAILRESOURCETYPE     VT_INT: Resource type of the thumbnail.
DEFINE_API_PKEY(PKEY_ADFAppDir,              AdfAppDir,              0x26b8d54f, 0x371f, 0x4aeb, 0x8a, 0x84, 0x92, 0x24, 0xae, 0xa4, 0xd4, 0xa, 0x00000023L); // PID_ADF_EXEPATH                   VT_BSTR: The exe path in the secondary stream.
DEFINE_API_PKEY(PKEY_ADFPublisherURL,        AdfPublisherUrl,        0x26b8d54f, 0x371f, 0x4aeb, 0x8a, 0x84, 0x92, 0x24, 0xae, 0xa4, 0xd4, 0xa, 0x00000024L); // PID_ADF_PUBLISHERURL        VT_BSTR | VT_ARRAY: Formatted list of one or more publisher urls
DEFINE_API_PKEY(PKEY_ADFDeveloperURL,        AdfDeveloperUrl,        0x26b8d54f, 0x371f, 0x4aeb, 0x8a, 0x84, 0x92, 0x24, 0xae, 0xa4, 0xd4, 0xa, 0x00000025L); // PID_ADF_DEVELOPERURL        VT_BSTR | VT_ARRAY: Formatted list of one or more developer urls


///FMTID_GDFInformation
// These have been removed from version 0.0.0.0005
// #define PSGUID_GDFINFORMATION   { 0x3476272f, 0xe420, 0x42a7, 0xab, 0xc7, 0x21, 0x19, 0x51, 0x2c, 0x97, 0x98 }
DEFINE_API_PKEY(PKEY_GDFPlayers,     GdfPlayers,        0x3476272f, 0xe420, 0x42a7, 0xab, 0xc7, 0x21, 0x19, 0x51, 0x2c, 0x97, 0x98, 0x00000010L); // PID_GDF_PLAYERS     VT_BSTR: Player range
DEFINE_API_PKEY(PKEY_GDFGenre,       GdfGenre,          0x3476272f, 0xe420, 0x42a7, 0xab, 0xc7, 0x21, 0x19, 0x51, 0x2c, 0x97, 0x98, 0x00000011L); // PID_GDF_GENRE       VT_I2 | VT_ARRAY:  Formatted list of one or more game genres
DEFINE_API_PKEY(PKEY_GDFSaveExt,     GdfSaveExt,        0x3476272f, 0xe420, 0x42a7, 0xab, 0xc7, 0x21, 0x19, 0x51, 0x2c, 0x97, 0x98, 0x00000012L); // PID_GDF_SAVE_EXT    VT_BSTR:     SaveGame extension

///FMTID_RGMInformation
// #define PSGUID_RGMINFORMATION   { 0xa2fc30e7, 0xa6cc, 0x4da8, 0x91, 0xaf, 0x33, 0x71, 0xa2, 0xa6, 0x11, 0xfa }
DEFINE_API_PKEY(PKEY_RGMLevelName,   RgmLevel,      0xa2fc30e7, 0xa6cc, 0x4da8, 0x91, 0xaf, 0x33, 0x71, 0xa2, 0xa6, 0x11, 0xfa, 0x00000012L); // VT_BSTR: Save Game Level
DEFINE_API_PKEY(PKEY_RGMAppVersion,  RgmAppVersion, 0xa2fc30e7, 0xa6cc, 0x4da8, 0x91, 0xaf, 0x33, 0x71, 0xa2, 0xa6, 0x11, 0xfa, 0x00000015L); // VT_BSTR: Save Game App Version
DEFINE_API_PKEY(PKEY_RGMAppID,       RgmAppId,      0xa2fc30e7, 0xa6cc, 0x4da8, 0x91, 0xaf, 0x33, 0x71, 0xa2, 0xa6, 0x11, 0xfa, 0x00000016L); // VT_BSTR: Save Game App ID
DEFINE_API_PKEY(PKEY_RGMExtension1,  RgmExtension1, 0xa2fc30e7, 0xa6cc, 0x4da8, 0x91, 0xaf, 0x33, 0x71, 0xa2, 0xa6, 0x11, 0xfa, 0x00000017L); // VT_BSTR: Extension Value 1
DEFINE_API_PKEY(PKEY_RGMExtension2,  RgmExtension2, 0xa2fc30e7, 0xa6cc, 0x4da8, 0x91, 0xaf, 0x33, 0x71, 0xa2, 0xa6, 0x11, 0xfa, 0x00000018L); // VT_BSTR: Extension Value 2
DEFINE_API_PKEY(PKEY_RGMExtension3,  RgmExtension3, 0xa2fc30e7, 0xa6cc, 0x4da8, 0x91, 0xaf, 0x33, 0x71, 0xa2, 0xa6, 0x11, 0xfa, 0x00000019L); // VT_BSTR: Extension Value 3
DEFINE_API_PKEY(PKEY_RGMExtension4,  RgmExtension4, 0xa2fc30e7, 0xa6cc, 0x4da8, 0x91, 0xaf, 0x33, 0x71, 0xa2, 0xa6, 0x11, 0xfa, 0x0000001AL); // VT_BSTR: Extension Value 4
DEFINE_API_PKEY(PKEY_RGMExtension5,  RgmExtension5, 0xa2fc30e7, 0xa6cc, 0x4da8, 0x91, 0xaf, 0x33, 0x71, 0xa2, 0xa6, 0x11, 0xfa, 0x0000001BL); // VT_BSTR: Extension Value 5

///FMTID_ADFPreview
// #define PSGUID_ADFPREVIEW { 0xf201a73f, 0x77d8, 0x4c97, 0xbd, 0xfc, 0x0, 0xf, 0x88, 0xc2, 0xb9, 0x23 }
DEFINE_API_PKEY(PKEY_ADFPreviewDeveloper,   AdfPreviewDeveloper,    0xf201a73f, 0x77d8, 0x4c97, 0xbd, 0xfc, 0x0, 0xf, 0x88, 0xc2, 0xb9, 0x23, 0x00000010L); // PID_ADFPREVIEW_DEVELOPER       VT_BSTR: The specially formated string for developer used by standard preview pane: ;Microsoft Corporation;http://www.microsoft.com
DEFINE_API_PKEY(PKEY_ADFPreviewPublisher,   AdfPreviewPublisher,    0xf201a73f, 0x77d8, 0x4c97, 0xbd, 0xfc, 0x0, 0xf, 0x88, 0xc2, 0xb9, 0x23, 0x00000011L); // PID_ADFPREVIEW_PUBLISHER       VT_BSTR: The specially formated string for publisher used by standard preview pane: ;Microsoft Corporation;http://www.microsoft.com
DEFINE_API_PKEY(PKEY_ADFPreviewRating,      AdfPreviewRating,       0xf201a73f, 0x77d8, 0x4c97, 0xbd, 0xfc, 0x0, 0xf, 0x88, 0xc2, 0xb9, 0x23, 0x00000012L); // PID_ADFPREVIEW_RATING          VT_BSTR: The specially formated string for rating used by standard preview pane:  shell32.dll,BITMAP,133;Microsoft Corporation;http://www.microsoft.com

#ifndef _API_PKEYS_ONLY
// Property group GUIDs. Defines collections of properties for display in propertyui
DEFINE_GUID(PGID_SaveGameDetails,       0xE7B8437E, 0xEC0D, 0x45a7, 0xB2, 0x6D, 0x39, 0xDA, 0x5B, 0x12, 0xEA, 0xA1);
DEFINE_GUID(PGID_GameDetails,           0x557582BC, 0x22CD, 0x466f, 0x8E, 0xA2, 0xA9, 0x99, 0x61, 0xC4, 0xAA, 0xE1);
DEFINE_GUID(PGID_GameParentalControls,  0x0DD3D271, 0x8160, 0x4A8E, 0x8D, 0x82, 0x1B, 0x8C, 0xA4, 0x7F, 0x68, 0x23);
#endif

///FMTID_ADFTaskInformation
// #define PSGUID_ADFTASKINFORMATION { 0xaa1bec91, 0x8c10, 0x4e18, 0xbe, 0x13, 0x54, 0x51, 0x7, 0xbc, 0x96, 0xe5 }
DEFINE_API_PKEY(PKEY_ADFTaskRunApp,    AdfTaskRunApp,         0xaa1bec91, 0x8c10, 0x4e18, 0xbe, 0x13, 0x54, 0x51, 0x7, 0xbc, 0x96, 0xe5, 0x00000010L); // PID_ADFTASK_RUNAPP       VT_BSTR: Invoke Data for Run App
DEFINE_API_PKEY(PKEY_ADFTaskHomePage,  AdfTaskHomePage,       0xaa1bec91, 0x8c10, 0x4e18, 0xbe, 0x13, 0x54, 0x51, 0x7, 0xbc, 0x96, 0xe5, 0x00000011L); // PID_ADFTASK_HOMEPAGE     VT_BSTR: Invoke Data for homepage
DEFINE_API_PKEY(PKEY_ADFTaskRunHelp,   AdfTaskRunHelp,        0xaa1bec91, 0x8c10, 0x4e18, 0xbe, 0x13, 0x54, 0x51, 0x7, 0xbc, 0x96, 0xe5, 0x00000012L); // PID_ADFTASK_RUNHELP      VT_BSTR: Invoke Data for help
DEFINE_API_PKEY(PKEY_ADFTaskSupport,   AdfTaskSupport,        0xaa1bec91, 0x8c10, 0x4e18, 0xbe, 0x13, 0x54, 0x51, 0x7, 0xbc, 0x96, 0xe5, 0x00000013L); // PID_ADFTASK_SUPPORT      VT_BSTR: Invoke Data for support
DEFINE_API_PKEY(PKEY_ADFTaskForums,    AdfTaskForums,         0xaa1bec91, 0x8c10, 0x4e18, 0xbe, 0x13, 0x54, 0x51, 0x7, 0xbc, 0x96, 0xe5, 0x00000014L); // PID_ADFTASK_FORUMS       VT_BSTR: Invoke Data for forums
DEFINE_API_PKEY(PKEY_ADFTaskNews,      AdfTaskNews,           0xaa1bec91, 0x8c10, 0x4e18, 0xbe, 0x13, 0x54, 0x51, 0x7, 0xbc, 0x96, 0xe5, 0x00000015L); // PID_ADFTASK_NEWS         VT_BSTR: Invoke Data for news
DEFINE_API_PKEY(PKEY_ADFTaskReadme,    AdfTaskReadme,         0xaa1bec91, 0x8c10, 0x4e18, 0xbe, 0x13, 0x54, 0x51, 0x7, 0xbc, 0x96, 0xe5, 0x00000016L); // PID_ADFTASK_README       VT_BSTR: Invoke Data for Readme
DEFINE_API_PKEY(PKEY_ADFTaskLicense,   AdfTaskLicense,        0xaa1bec91, 0x8c10, 0x4e18, 0xbe, 0x13, 0x54, 0x51, 0x7, 0xbc, 0x96, 0xe5, 0x00000017L); // PID_ADFTASK_LICENSE      VT_BSTR: Invoke Data for licensing
DEFINE_API_PKEY(PKEY_ADFTaskDemo,      AdfTaskDemo,           0xaa1bec91, 0x8c10, 0x4e18, 0xbe, 0x13, 0x54, 0x51, 0x7, 0xbc, 0x96, 0xe5, 0x00000018L); // PID_ADFTASK_DEMO         VT_BSTR: Invoke Data for downloading the demo
DEFINE_API_PKEY(PKEY_ADFTaskPurchase,  AdfTaskPurchase,       0xaa1bec91, 0x8c10, 0x4e18, 0xbe, 0x13, 0x54, 0x51, 0x7, 0xbc, 0x96, 0xe5, 0x00000019L); // PID_ADFTASK_PURCHASE     VT_BSTR: Invoke Data for purchase
DEFINE_API_PKEY(PKEY_ADFTaskUninstall, AdfTaskUninstall,      0xaa1bec91, 0x8c10, 0x4e18, 0xbe, 0x13, 0x54, 0x51, 0x7, 0xbc, 0x96, 0xe5, 0x0000001AL); // PID_ADFTASK_UNINSTALL    VT_BSTR: Invoke Data for uninstall
DEFINE_API_PKEY(PKEY_ADFTaskRunAppWorkingPath,  AdfTaskRunAppWorkingPath,     0xaa1bec91, 0x8c10, 0x4e18, 0xbe, 0x13, 0x54, 0x51, 0x7, 0xbc, 0x96, 0xe5, 0x0000001BL); // PID_ADFTASK_RUNAPPWORKINGPATH    VT_BSTR: Working path for Run App
DEFINE_API_PKEY(PKEY_ADFTaskRunAppArguments,    AdfTaskRunAppArguments,       0xaa1bec91, 0x8c10, 0x4e18, 0xbe, 0x13, 0x54, 0x51, 0x7, 0xbc, 0x96, 0xe5, 0x0000001CL); // PID_ADFTASK_RUNAPPARGUMENTS      VT_BSTR: Arguments for Run App

DEFINE_API_PKEY(PKEY_AnnotationAuthor,     AnnotationAuthor,     0x4e1353cd, 0x1c9a, 0x443c, 0xb5, 0xae, 0x7a, 0xef, 0x98, 0xe4, 0xc7, 0x7c, 2);
DEFINE_API_PKEY(PKEY_AnnotationContent,    AnnotationContent,    0x4e1353cd, 0x1c9a, 0x443c, 0xb5, 0xae, 0x7a, 0xef, 0x98, 0xe4, 0xc7, 0x7c, 3);
DEFINE_API_PKEY(PKEY_AnnotationNoteColor,  AnnotationNoteColor,  0x4e1353cd, 0x1c9a, 0x443c, 0xb5, 0xae, 0x7a, 0xef, 0x98, 0xe4, 0xc7, 0x7c, 4);
DEFINE_API_PKEY(PKEY_AnnotationInkColor,   AnnotationInkColor,   0x4e1353cd, 0x1c9a, 0x443c, 0xb5, 0xae, 0x7a, 0xef, 0x98, 0xe4, 0xc7, 0x7c, 5);
DEFINE_API_PKEY(PKEY_AnnotationDate,       AnnotationDate,       0x4e1353cd, 0x1c9a, 0x443c, 0xb5, 0xae, 0x7a, 0xef, 0x98, 0xe4, 0xc7, 0x7c, 6);


// Conflict Folder properties
// DEFINE_GUID(FMTID_CONFLICT, 0x795c6b52, 0x6e1d, 0x491e, 0x86, 0x5e, 0x8e, 0x98, 0x53, 0x32, 0xa0, 0x9e);
DEFINE_API_PKEY(PKEY_ConflictSyncHandler,   ConflictSyncHandler,   0x795c6b52, 0x6e1d, 0x491e, 0x86, 0x5e, 0x8e, 0x98, 0x53, 0x32, 0xa0, 0x9e, 2); // VT_BSTR
DEFINE_API_PKEY(PKEY_ConflictSyncItem,      ConflictSyncItem,      0x795c6b52, 0x6e1d, 0x491e, 0x86, 0x5e, 0x8e, 0x98, 0x53, 0x32, 0xa0, 0x9e, 3); // VT_BSTR
DEFINE_API_PKEY(PKEY_ConflictSummary,       ConflictSummary,       0x795c6b52, 0x6e1d, 0x491e, 0x86, 0x5e, 0x8e, 0x98, 0x53, 0x32, 0xa0, 0x9e, 4); // VT_BSTR
DEFINE_API_PKEY(PKEY_ConflictPartnership,   ConflictPartnership,   0x795c6b52, 0x6e1d, 0x491e, 0x86, 0x5e, 0x8e, 0x98, 0x53, 0x32, 0xa0, 0x9e, 5); // VT_BSTR
DEFINE_API_PKEY(PKEY_ConflictItem1Location, ConflictItem1Location, 0x795c6b52, 0x6e1d, 0x491e, 0x86, 0x5e, 0x8e, 0x98, 0x53, 0x32, 0xa0, 0x9e, 6); // VT_BSTR
DEFINE_API_PKEY(PKEY_ConflictItem1Device,   ConflictItem1Device,   0x795c6b52, 0x6e1d, 0x491e, 0x86, 0x5e, 0x8e, 0x98, 0x53, 0x32, 0xa0, 0x9e, 7); // VT_BSTR
DEFINE_API_PKEY(PKEY_ConflictItem1Path,     ConflictItem1Path,     0x795c6b52, 0x6e1d, 0x491e, 0x86, 0x5e, 0x8e, 0x98, 0x53, 0x32, 0xa0, 0x9e, 8); // VT_BSTR
DEFINE_API_PKEY(PKEY_ConflictItem1Name,     ConflictItem1Name,     0x795c6b52, 0x6e1d, 0x491e, 0x86, 0x5e, 0x8e, 0x98, 0x53, 0x32, 0xa0, 0x9e, 9); // VT_BSTR
DEFINE_API_PKEY(PKEY_ConflictItem2Location, ConflictItem2Location, 0x795c6b52, 0x6e1d, 0x491e, 0x86, 0x5e, 0x8e, 0x98, 0x53, 0x32, 0xa0, 0x9e, 6); // VT_BSTR
DEFINE_API_PKEY(PKEY_ConflictItem2Device,   ConflictItem2Device,   0x795c6b52, 0x6e1d, 0x491e, 0x86, 0x5e, 0x8e, 0x98, 0x53, 0x32, 0xa0, 0x9e, 7); // VT_BSTR
DEFINE_API_PKEY(PKEY_ConflictItem2Path,     ConflictItem2Path,     0x795c6b52, 0x6e1d, 0x491e, 0x86, 0x5e, 0x8e, 0x98, 0x53, 0x32, 0xa0, 0x9e, 8); // VT_BSTR
DEFINE_API_PKEY(PKEY_ConflictItem2Name,     ConflictItem2Name,     0x795c6b52, 0x6e1d, 0x491e, 0x86, 0x5e, 0x8e, 0x98, 0x53, 0x32, 0xa0, 0x9e, 9); // VT_BSTR

// Device properties
// These PKEYs correspond to the old setupapi SPDRP_XXX properties
DEFINE_API_PKEY(PKEY_Device_DeviceDesc,             DeviceDeviceDesc            , 0xa45c254e, 0xdf1c, 0x4efd, 0x80, 0x20, 0x67, 0xd1, 0x46, 0xa8, 0x50, 0xe0, 2);
DEFINE_API_PKEY(PKEY_Device_HardwareIds,            DeviceHardwareIds           , 0xa45c254e, 0xdf1c, 0x4efd, 0x80, 0x20, 0x67, 0xd1, 0x46, 0xa8, 0x50, 0xe0, 3);
DEFINE_API_PKEY(PKEY_Device_CompatibleIds,          DeviceCompatibleIds         , 0xa45c254e, 0xdf1c, 0x4efd, 0x80, 0x20, 0x67, 0xd1, 0x46, 0xa8, 0x50, 0xe0, 4);
DEFINE_API_PKEY(PKEY_Device_Service,                DeviceService               , 0xa45c254e, 0xdf1c, 0x4efd, 0x80, 0x20, 0x67, 0xd1, 0x46, 0xa8, 0x50, 0xe0, 6);
DEFINE_API_PKEY(PKEY_Device_Class,                  DeviceClass                 , 0xa45c254e, 0xdf1c, 0x4efd, 0x80, 0x20, 0x67, 0xd1, 0x46, 0xa8, 0x50, 0xe0, 9);
DEFINE_API_PKEY(PKEY_Device_ClassGuid,              DeviceClassGuid             , 0xa45c254e, 0xdf1c, 0x4efd, 0x80, 0x20, 0x67, 0xd1, 0x46, 0xa8, 0x50, 0xe0, 10);
DEFINE_API_PKEY(PKEY_Device_Driver,                 DeviceDriver                , 0xa45c254e, 0xdf1c, 0x4efd, 0x80, 0x20, 0x67, 0xd1, 0x46, 0xa8, 0x50, 0xe0, 11);
DEFINE_API_PKEY(PKEY_Device_ConfigFlags,            DeviceConfigFlags           , 0xa45c254e, 0xdf1c, 0x4efd, 0x80, 0x20, 0x67, 0xd1, 0x46, 0xa8, 0x50, 0xe0, 12);
DEFINE_API_PKEY(PKEY_Device_Manufacturer,           DeviceManufacturer          , 0xa45c254e, 0xdf1c, 0x4efd, 0x80, 0x20, 0x67, 0xd1, 0x46, 0xa8, 0x50, 0xe0, 13);
DEFINE_API_PKEY(PKEY_Device_FriendlyName,           DeviceFriendlyName          , 0xa45c254e, 0xdf1c, 0x4efd, 0x80, 0x20, 0x67, 0xd1, 0x46, 0xa8, 0x50, 0xe0, 14);
DEFINE_API_PKEY(PKEY_Device_LocationInfo,           DeviceLocationInfo          , 0xa45c254e, 0xdf1c, 0x4efd, 0x80, 0x20, 0x67, 0xd1, 0x46, 0xa8, 0x50, 0xe0, 15);
DEFINE_API_PKEY(PKEY_Device_PDOName,                DevicePDOName               , 0xa45c254e, 0xdf1c, 0x4efd, 0x80, 0x20, 0x67, 0xd1, 0x46, 0xa8, 0x50, 0xe0, 16);
DEFINE_API_PKEY(PKEY_Device_Capabilities,           DeviceCapabilities          , 0xa45c254e, 0xdf1c, 0x4efd, 0x80, 0x20, 0x67, 0xd1, 0x46, 0xa8, 0x50, 0xe0, 17);
DEFINE_API_PKEY(PKEY_Device_UINumber,               DeviceUINumber              , 0xa45c254e, 0xdf1c, 0x4efd, 0x80, 0x20, 0x67, 0xd1, 0x46, 0xa8, 0x50, 0xe0, 18);
DEFINE_API_PKEY(PKEY_Device_UpperFilters,           DeviceUpperFilters          , 0xa45c254e, 0xdf1c, 0x4efd, 0x80, 0x20, 0x67, 0xd1, 0x46, 0xa8, 0x50, 0xe0, 19);
DEFINE_API_PKEY(PKEY_Device_LowerFilters,           DeviceLowerFilters          , 0xa45c254e, 0xdf1c, 0x4efd, 0x80, 0x20, 0x67, 0xd1, 0x46, 0xa8, 0x50, 0xe0, 20);
DEFINE_API_PKEY(PKEY_Device_BusTypeGuid,            DeviceBusTypeGuid           , 0xa45c254e, 0xdf1c, 0x4efd, 0x80, 0x20, 0x67, 0xd1, 0x46, 0xa8, 0x50, 0xe0, 21);
DEFINE_API_PKEY(PKEY_Device_LegacyBusType,          DeviceLegacyBusType         , 0xa45c254e, 0xdf1c, 0x4efd, 0x80, 0x20, 0x67, 0xd1, 0x46, 0xa8, 0x50, 0xe0, 22);
DEFINE_API_PKEY(PKEY_Device_BusNumber,              DeviceBusNumber             , 0xa45c254e, 0xdf1c, 0x4efd, 0x80, 0x20, 0x67, 0xd1, 0x46, 0xa8, 0x50, 0xe0, 23);
DEFINE_API_PKEY(PKEY_Device_EnumeratorName,         DeviceEnumeratorName        , 0xa45c254e, 0xdf1c, 0x4efd, 0x80, 0x20, 0x67, 0xd1, 0x46, 0xa8, 0x50, 0xe0, 24);
DEFINE_API_PKEY(PKEY_Device_Security,               DeviceSecurity              , 0xa45c254e, 0xdf1c, 0x4efd, 0x80, 0x20, 0x67, 0xd1, 0x46, 0xa8, 0x50, 0xe0, 25);
DEFINE_API_PKEY(PKEY_Device_SecuritySDS,            DeviceSecuritySDS           , 0xa45c254e, 0xdf1c, 0x4efd, 0x80, 0x20, 0x67, 0xd1, 0x46, 0xa8, 0x50, 0xe0, 26);
DEFINE_API_PKEY(PKEY_Device_DevType,                DeviceDevType               , 0xa45c254e, 0xdf1c, 0x4efd, 0x80, 0x20, 0x67, 0xd1, 0x46, 0xa8, 0x50, 0xe0, 27);
DEFINE_API_PKEY(PKEY_Device_Exclusive,              DeviceExclusive             , 0xa45c254e, 0xdf1c, 0x4efd, 0x80, 0x20, 0x67, 0xd1, 0x46, 0xa8, 0x50, 0xe0, 28);
DEFINE_API_PKEY(PKEY_Device_Characteristics,        DeviceCharacteristics       , 0xa45c254e, 0xdf1c, 0x4efd, 0x80, 0x20, 0x67, 0xd1, 0x46, 0xa8, 0x50, 0xe0, 29);
DEFINE_API_PKEY(PKEY_Device_Address,                DeviceAddress               , 0xa45c254e, 0xdf1c, 0x4efd, 0x80, 0x20, 0x67, 0xd1, 0x46, 0xa8, 0x50, 0xe0, 30);
DEFINE_API_PKEY(PKEY_Device_UINumberDescFormat,     DeviceUINumberDescFormat    , 0xa45c254e, 0xdf1c, 0x4efd, 0x80, 0x20, 0x67, 0xd1, 0x46, 0xa8, 0x50, 0xe0, 31);
DEFINE_API_PKEY(PKEY_Device_PowerData,              DevicePowerData             , 0xa45c254e, 0xdf1c, 0x4efd, 0x80, 0x20, 0x67, 0xd1, 0x46, 0xa8, 0x50, 0xe0, 32);
DEFINE_API_PKEY(PKEY_Device_RemovalPolicy,          DeviceRemovalPolicy         , 0xa45c254e, 0xdf1c, 0x4efd, 0x80, 0x20, 0x67, 0xd1, 0x46, 0xa8, 0x50, 0xe0, 33);
DEFINE_API_PKEY(PKEY_Device_RemovalPolicyDefault,   DeviceRemovalPolicyDefault  , 0xa45c254e, 0xdf1c, 0x4efd, 0x80, 0x20, 0x67, 0xd1, 0x46, 0xa8, 0x50, 0xe0, 34);
DEFINE_API_PKEY(PKEY_Device_RemovalPolicyOverride,  DeviceRemovalPolicyOverride , 0xa45c254e, 0xdf1c, 0x4efd, 0x80, 0x20, 0x67, 0xd1, 0x46, 0xa8, 0x50, 0xe0, 35);
DEFINE_API_PKEY(PKEY_Device_InstallState,           DeviceInstallState          , 0xa45c254e, 0xdf1c, 0x4efd, 0x80, 0x20, 0x67, 0xd1, 0x46, 0xa8, 0x50, 0xe0, 36);
DEFINE_API_PKEY(PKEY_Device_LocationPaths,          DeviceLocationPaths         , 0xa45c254e, 0xdf1c, 0x4efd, 0x80, 0x20, 0x67, 0xd1, 0x46, 0xa8, 0x50, 0xe0, 37);

// Device properties
// These PKEYs correspond to a device's status and problem code
DEFINE_API_PKEY(PKEY_Device_DevNodeStatus,          DeviceDevNodeStatus         , 0x4340a6c5, 0x93fa, 0x4706, 0x97, 0x2c, 0x7b, 0x64, 0x80, 0x08, 0xa5, 0xa7, 2);
DEFINE_API_PKEY(PKEY_Device_ProblemCode,            DeviceProblemCode           , 0x4340a6c5, 0x93fa, 0x4706, 0x97, 0x2c, 0x7b, 0x64, 0x80, 0x08, 0xa5, 0xa7, 3);

// Device properties
// These PKEYs correspond to device relations
DEFINE_API_PKEY(PKEY_Device_EjectionRelations,      DeviceEjectionRelations     , 0x4340a6c5, 0x93fa, 0x4706, 0x97, 0x2c, 0x7b, 0x64, 0x80, 0x08, 0xa5, 0xa7, 4);
DEFINE_API_PKEY(PKEY_Device_RemovalRelations,       DeviceRemovalRelations      , 0x4340a6c5, 0x93fa, 0x4706, 0x97, 0x2c, 0x7b, 0x64, 0x80, 0x08, 0xa5, 0xa7, 5);
DEFINE_API_PKEY(PKEY_Device_PowerRelations,         DevicePowerRelations        , 0x4340a6c5, 0x93fa, 0x4706, 0x97, 0x2c, 0x7b, 0x64, 0x80, 0x08, 0xa5, 0xa7, 6);
DEFINE_API_PKEY(PKEY_Device_BusRelations,           DeviceBusRelations          , 0x4340a6c5, 0x93fa, 0x4706, 0x97, 0x2c, 0x7b, 0x64, 0x80, 0x08, 0xa5, 0xa7, 7);
DEFINE_API_PKEY(PKEY_Device_Parent,                 DeviceParent                , 0x4340a6c5, 0x93fa, 0x4706, 0x97, 0x2c, 0x7b, 0x64, 0x80, 0x08, 0xa5, 0xa7, 8);
DEFINE_API_PKEY(PKEY_Device_Child,                  DeviceChild                 , 0x4340a6c5, 0x93fa, 0x4706, 0x97, 0x2c, 0x7b, 0x64, 0x80, 0x08, 0xa5, 0xa7, 9);
DEFINE_API_PKEY(PKEY_Device_Sibling,                DeviceSibling               , 0x4340a6c5, 0x93fa, 0x4706, 0x97, 0x2c, 0x7b, 0x64, 0x80, 0x08, 0xa5, 0xa7, 10);

// Device properties
// These PKEYs correspond to registry values under the device's 'driver' key
DEFINE_API_PKEY(PKEY_Device_DriverDate,             DeviceDriverDate            , 0xa8b865dd, 0x2e3d, 0x4094, 0xad, 0x97, 0xe5, 0x93, 0xa7, 0xc, 0x75, 0xd6, 2);
DEFINE_API_PKEY(PKEY_Device_DriverVersion,          DeviceDriverVersion         , 0xa8b865dd, 0x2e3d, 0x4094, 0xad, 0x97, 0xe5, 0x93, 0xa7, 0xc, 0x75, 0xd6, 3);
DEFINE_API_PKEY(PKEY_Device_DriverDesc,             DeviceDriverDesc            , 0xa8b865dd, 0x2e3d, 0x4094, 0xad, 0x97, 0xe5, 0x93, 0xa7, 0xc, 0x75, 0xd6, 4);
DEFINE_API_PKEY(PKEY_Device_DriverInfPath,          DeviceDriverInfPath         , 0xa8b865dd, 0x2e3d, 0x4094, 0xad, 0x97, 0xe5, 0x93, 0xa7, 0xc, 0x75, 0xd6, 5);
DEFINE_API_PKEY(PKEY_Device_DriverInfSection,       DeviceDriverInfSection      , 0xa8b865dd, 0x2e3d, 0x4094, 0xad, 0x97, 0xe5, 0x93, 0xa7, 0xc, 0x75, 0xd6, 6);
DEFINE_API_PKEY(PKEY_Device_DriverInfSectionExt,    DeviceDriverInfSectionExt   , 0xa8b865dd, 0x2e3d, 0x4094, 0xad, 0x97, 0xe5, 0x93, 0xa7, 0xc, 0x75, 0xd6, 7);
DEFINE_API_PKEY(PKEY_Device_MatchingDeviceId,       DeviceMatchingDeviceId      , 0xa8b865dd, 0x2e3d, 0x4094, 0xad, 0x97, 0xe5, 0x93, 0xa7, 0xc, 0x75, 0xd6, 8);
DEFINE_API_PKEY(PKEY_Device_DriverProvider,         DeviceDriverProvider        , 0xa8b865dd, 0x2e3d, 0x4094, 0xad, 0x97, 0xe5, 0x93, 0xa7, 0xc, 0x75, 0xd6, 9);
DEFINE_API_PKEY(PKEY_Device_DriverPropPageProvider, DeviceDriverPropPageProvider, 0xa8b865dd, 0x2e3d, 0x4094, 0xad, 0x97, 0xe5, 0x93, 0xa7, 0xc, 0x75, 0xd6, 10);
DEFINE_API_PKEY(PKEY_Device_DriverCoInstallers,     DeviceDriverCoInstallers    , 0xa8b865dd, 0x2e3d, 0x4094, 0xad, 0x97, 0xe5, 0x93, 0xa7, 0xc, 0x75, 0xd6, 11);
DEFINE_API_PKEY(PKEY_Device_ResourcePickerTags,     DeviceResourcePickerTags    , 0xa8b865dd, 0x2e3d, 0x4094, 0xad, 0x97, 0xe5, 0x93, 0xa7, 0xc, 0x75, 0xd6, 12);
DEFINE_API_PKEY(PKEY_Device_ResourcePickerExceptions, DeviceResourcePickerExceptions    , 0xa8b865dd, 0x2e3d, 0x4094, 0xad, 0x97, 0xe5, 0x93, 0xa7, 0xc, 0x75, 0xd6, 13);

// Device properties that are intended for user consumption (Hardware & Devices folder in the shell)
DEFINE_API_PKEY(PKEY_Device_System_ProcDesc,        DeviceSystemProcDesc        , 0xeaee7f1d, 0x6a33, 0x44d1, 0x94, 0x41, 0x5f, 0x46, 0xde, 0xf2, 0x31, 0x98, 1);
DEFINE_API_PKEY(PKEY_Device_System_MemDesc,         DeviceSystemMemDesc         , 0xeaee7f1d, 0x6a33, 0x44d1, 0x94, 0x41, 0x5f, 0x46, 0xde, 0xf2, 0x31, 0x98, 2);
                                                                                
// Device properties that were set by the driver package that was installed
// on the device.
DEFINE_API_PKEY(PKEY_DrvPkg_Model,                  DeviceModel                 , 0xcf73bb51, 0x3abf, 0x44a2, 0x85, 0xe0, 0x9a, 0x3d, 0xc7, 0xa1, 0x21, 0x32, 2);
DEFINE_API_PKEY(PKEY_DrvPkg_VendorWebSite,          DeviceVendorWebSite         , 0xcf73bb51, 0x3abf, 0x44a2, 0x85, 0xe0, 0x9a, 0x3d, 0xc7, 0xa1, 0x21, 0x32, 3);
DEFINE_API_PKEY(PKEY_DrvPkg_DetailedDescription,    DeviceDetailedDescription   , 0xcf73bb51, 0x3abf, 0x44a2, 0x85, 0xe0, 0x9a, 0x3d, 0xc7, 0xa1, 0x21, 0x32, 4);
DEFINE_API_PKEY(PKEY_DrvPkg_DocumentationLink,      DeviceDocumentationLink     , 0xcf73bb51, 0x3abf, 0x44a2, 0x85, 0xe0, 0x9a, 0x3d, 0xc7, 0xa1, 0x21, 0x32, 5);
DEFINE_API_PKEY(PKEY_DrvPkg_Icon,                   DeviceIcon                  , 0xcf73bb51, 0x3abf, 0x44a2, 0x85, 0xe0, 0x9a, 0x3d, 0xc7, 0xa1, 0x21, 0x32, 6);
DEFINE_API_PKEY(PKEY_DrvPkg_BrandingIcon,           DeviceBrandingIcon          , 0xcf73bb51, 0x3abf, 0x44a2, 0x85, 0xe0, 0x9a, 0x3d, 0xc7, 0xa1, 0x21, 0x32, 7);


// Device setup class properties
// These PKEYs correspond to the old setupapi SPCRP_XXX properties
DEFINE_API_PKEY(PKEY_DeviceClass_UpperFilters,      DeviceClassUpperFilters     , 0x4321918b, 0xf69e, 0x470d, 0xa5, 0xde, 0x4d, 0x88, 0xc7, 0x5a, 0xd2, 0x4b, 19);
DEFINE_API_PKEY(PKEY_DeviceClass_LowerFilters,      DeviceClassLowerFilters     , 0x4321918b, 0xf69e, 0x470d, 0xa5, 0xde, 0x4d, 0x88, 0xc7, 0x5a, 0xd2, 0x4b, 20);
DEFINE_API_PKEY(PKEY_DeviceClass_Security,          DeviceClassSecurity         , 0x4321918b, 0xf69e, 0x470d, 0xa5, 0xde, 0x4d, 0x88, 0xc7, 0x5a, 0xd2, 0x4b, 25);
DEFINE_API_PKEY(PKEY_DeviceClass_SecuritySDS,       DeviceClassSecuritySDS      , 0x4321918b, 0xf69e, 0x470d, 0xa5, 0xde, 0x4d, 0x88, 0xc7, 0x5a, 0xd2, 0x4b, 26);
DEFINE_API_PKEY(PKEY_DeviceClass_DevType,           DeviceClassDevType          , 0x4321918b, 0xf69e, 0x470d, 0xa5, 0xde, 0x4d, 0x88, 0xc7, 0x5a, 0xd2, 0x4b, 27);
DEFINE_API_PKEY(PKEY_DeviceClass_Exclusive,         DeviceClassExclusive        , 0x4321918b, 0xf69e, 0x470d, 0xa5, 0xde, 0x4d, 0x88, 0xc7, 0x5a, 0xd2, 0x4b, 28);
DEFINE_API_PKEY(PKEY_DeviceClass_Characteristics,   DeviceClassCharacteristics  , 0x4321918b, 0xf69e, 0x470d, 0xa5, 0xde, 0x4d, 0x88, 0xc7, 0x5a, 0xd2, 0x4b, 29);

// Device setup class properties
// These PKEYs correspond to registry values under the device class GUID key
DEFINE_API_PKEY(PKEY_DeviceClass_Name,              DeviceClassName                 , 0x259abffc, 0x50a7, 0x47ce, 0xaf, 0x8, 0x68, 0xc9, 0xa7, 0xd7, 0x33, 0x66, 2);
DEFINE_API_PKEY(PKEY_DeviceClass_ClassName,         DeviceClassClassName            , 0x259abffc, 0x50a7, 0x47ce, 0xaf, 0x8, 0x68, 0xc9, 0xa7, 0xd7, 0x33, 0x66, 3);
DEFINE_API_PKEY(PKEY_DeviceClass_Icon,              DeviceClassIcon                 , 0x259abffc, 0x50a7, 0x47ce, 0xaf, 0x8, 0x68, 0xc9, 0xa7, 0xd7, 0x33, 0x66, 4);
DEFINE_API_PKEY(PKEY_DeviceClass_ClassInstaller,    DeviceClassClassInstaller       , 0x259abffc, 0x50a7, 0x47ce, 0xaf, 0x8, 0x68, 0xc9, 0xa7, 0xd7, 0x33, 0x66, 5);
DEFINE_API_PKEY(PKEY_DeviceClass_PropPageProvider,  DeviceClassPropPageProvider     , 0x259abffc, 0x50a7, 0x47ce, 0xaf, 0x8, 0x68, 0xc9, 0xa7, 0xd7, 0x33, 0x66, 6);
DEFINE_API_PKEY(PKEY_DeviceClass_NoInstallClass,    DeviceClassNoInstallClass       , 0x259abffc, 0x50a7, 0x47ce, 0xaf, 0x8, 0x68, 0xc9, 0xa7, 0xd7, 0x33, 0x66, 7);
DEFINE_API_PKEY(PKEY_DeviceClass_NoDisplayClass,    DeviceClassNoDisplayClass       , 0x259abffc, 0x50a7, 0x47ce, 0xaf, 0x8, 0x68, 0xc9, 0xa7, 0xd7, 0x33, 0x66, 8);
DEFINE_API_PKEY(PKEY_DeviceClass_SilentInstall,     DeviceClassSilentInstall        , 0x259abffc, 0x50a7, 0x47ce, 0xaf, 0x8, 0x68, 0xc9, 0xa7, 0xd7, 0x33, 0x66, 9);
DEFINE_API_PKEY(PKEY_DeviceClass_NoUseClass,        DeviceClassNoUseClass           , 0x259abffc, 0x50a7, 0x47ce, 0xaf, 0x8, 0x68, 0xc9, 0xa7, 0xd7, 0x33, 0x66, 10);
DEFINE_API_PKEY(PKEY_DeviceClass_DefaultService,    DeviceClassDefaultService       , 0x259abffc, 0x50a7, 0x47ce, 0xaf, 0x8, 0x68, 0xc9, 0xa7, 0xd7, 0x33, 0x66, 11);

//
// Other Device setup class properties
//
DEFINE_API_PKEY(PKEY_DeviceClass_ClassCoInstallers, DeviceClassCoInstallers         , 0x713d1703, 0xa2e2, 0x49f5, 0x92, 0x14, 0x56, 0x47, 0x2e, 0xf3, 0xda, 0x5c, 2);

//
// Device interface properties
//
DEFINE_API_PKEY(PKEY_DeviceInterface_FriendlyName,  DeviceInterfaceFriendlyName     , 0x026e516e, 0xb814, 0x414b, 0x83, 0xcd, 0x85, 0x6d, 0x6f, 0xef, 0x48, 0x22, 2);


#ifndef _API_PKEYS_ONLY
// Annotation properties PKEYs
// #define FMTID_ANNOTATIONS  { 0x4a3322be, 0xb8e9, 0x49ec, 0xa7, 0xd7, 0xe0, 0x78, 0xfd, 0xe1, 0x4a, 0x7b }
DEFINE_PROPERTYKEY(PKEY_Annotations_Data,  0x4a3322be, 0xb8e9, 0x49ec, 0xa7, 0xd7, 0xe0, 0x78, 0xfd, 0xe1, 0x4a, 0x7b, 2); // PID_Annotations_Data
DEFINE_PROPERTYKEY(PKEY_Annotations_Type,  0x4a3322be, 0xb8e9, 0x49ec, 0xa7, 0xd7, 0xe0, 0x78, 0xfd, 0xe1, 0x4a, 0x7b, 3); // PID_Annotations_Type
DEFINE_PROPERTYKEY(PKEY_Annotations_Shell, 0x4a3322be, 0xb8e9, 0x49ec, 0xa7, 0xd7, 0xe0, 0x78, 0xfd, 0xe1, 0x4a, 0x7b, 4); // PID_Annotations_Shell


#endif

#endif  /* _INC_PROPKEY */


