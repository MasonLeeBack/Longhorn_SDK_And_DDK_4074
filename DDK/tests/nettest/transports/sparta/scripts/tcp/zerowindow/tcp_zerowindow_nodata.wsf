'************************************* TCP_ZeroWindow_NoData.wsf ***********************
'*                                                                                   *
'* Author            :    Sandeep Prabhu                                             *
'* Revision history  :                                                               *
'*    09/20/2000     sandeep        Created                                          *
'*    04/24/2003     karolys        added HCT-style comments for tst plan generation *
'*                                                                                   *
'* This script will test the TCP zero window probing screnarios                      *
'*                                                                                   *
'************************************* TCP_ZeroWindow_NoData.wsf ***********************


<package>
   <job id="Job 1">
      <reference id="Sparta" object="Spartacom.base.1" version="1.0"/>
      <reference id="Core" object="Testcore.base.1" version="1.0"/>
      <reference id="AutoSrv" object="AutoSrvCom.base.1" version="1.0"/>
      <script language="VBScript" src="..\..\common\InitAddress.vbs"/>
      <script language="VBScript" src="..\TCPLib.vbs"/>
      <script language="VBScript" src="TCPZeroWindowLib.vbs"/>                  
      <script id="TCP_ZeroWindow_NoData" language="VBScript">

'/**
' @area name="Offload Compliance Test Assertions"
' @group name="TCP Zero Window Probing Assertions"
' @group name="Zero Window Probing Without Data Assertions" 
' @define name="Offload" Offload Compliance Test Assertions
' @define name="TCPZW" TCP Zero Window Probing Assertions
' @define name="NoDZW" Zero Window Probing Without Data Assertions
' @hierarchy Offload TCPZW NoDZW
' @key Reference="WLP# - x.x.x.x; RFC-793 Section 3.7, RFC-1122 Section 4.2.2.17"
' @key TestDesc="TD-x.xx Offload Compliance Test Description"
' @key TestName="TCPv4 Zero Window Probing Without Data Functionality Tests"
' @key TestLog="TCP_ZeroWindow_NoData.log"
'*/

option explicit
    
Dim Core, Sparta, Autosrv, MediaType, AutoArpObject, IFace, pControllerObj
Const usMSS = 1460
 
'
' Start the script
'           
StartScript "TCP_ZeroWindow_NoData", g_szLogDirectory, "Tests for TCP zero window probing" 



' ==================================================================================================
' Main routine
' ==================================================================================================
Sub Main
   Core.SetAssertionTracking "60400"
   Dim ulStatus, ulWindowSize
   
   IFace.StartListening
   Core.StartTest "Zero window probing when no data to send"

   '/**
   ' @test name="The stack must not do zero window probing unless it has data to send." 
   ' Autosrv is requested to connect back to the script machine. Script machine accepts the connection and advertises a zero receive window in the SYN-ACK.<br/>
   ' variation 1: The stack has no data to send. The script waits for 5 secs to verify that the stack does not send zero window probes.
   ' After this the stack is asked to send data. It must start sending window probes.
   ' The script verifies that 3 window probes are sent then opens up the receive window and consumes the data. 
   ' The script advertises a zero window in the final ACK.<br/>
   ' variation 2: At this point the stack has no data to send. It must not send zero window probes.
   ' After this the stack is asked to send data. It again must start sending window probes. 
   ' When this is verified, the data is consumed and the connection is terminated.<br/>
   '*/
   
   ZeroWindowProbingWithNoData 
   Core.EndTest
   Core.Sleep(2500)
   IFace.StopListening
   
End Sub



'
' Ensure that zero window probing is done only when there is data to send. Tests the following -
' 1. Advertize a zero window in the SYN-ACK and ensure no 0 window probing till 1st send
' 2. The last ACK for the send advertizes a 0 window. Check no window probing till next send
'
Sub ZeroWindowProbingWithNoData
   Dim ulStatus, ulSeqNumber, ulAckNumber, ulSessionId, ulTID, usSrcPort, usDestPort
   Dim ulLastAck, ulBytesRcvd, ulDataLength, pTCPPacket
   
   ulSeqNumber = Clng(1000)
   ulAckNumber = Clng(1)
   usSrcPort = 5000
   usDestPort = 5001
   
   Core.StartVariation
   
   '
   ' Esatablish a TCP connection and advertize a 0 window in SYN-ACK
   '
   ulStatus = Connect(usSrcPort, usDestPort, ulSeqNumber, ulAckNumber, ulSessionId, 0, usMSS)
   if (ulStatus <> 0) then
      Core.BlockVariation "ZeroWindowProbingWithNoData: Connect - " & ulStatus
      exit sub
   end if

   '
   ' Check that no window probing is done, since there is no data to send
   '
   ulStatus = GetToWindowProbeState(usSrcPort, usDestPort, ulSessionId, ulSeqNumber, ulAckNumber)
   if (ulStatus = 0) then
      Core.FailSev1Variation "ZeroWindowProbingWithNoData: Window probing with no data to send"
      ResetConnection usSrcPort, usDestPort, ulSeqNumber, ulAckNumber, ulSessionId
      exit sub
   end if
   
   '
   ' Ask Autosrv to start sending data
   '
   ulStatus = pControllerObj.Send(ulSessionId, 1, 0, usMSS, ulTID)
   if (ulStatus <> 0) then
      Core.BlockVariation "ZeroWindowProbingWithNoData: Send - " & ulStatus
      ResetConnection usSrcPort, usDestPort, ulSeqNumber, ulAckNumber, ulSessionId
      exit sub
   end if
   
   '
   ' Get to the point where the first window probe packet is received
   '
   ulStatus = GetToWindowProbeState(usSrcPort, usDestPort, ulSessionId, ulSeqNumber, ulAckNumber)
   if (ulStatus <> 0) then
      Core.FailSev1Variation "ZeroWindowProbingWithNoData: GetToWindowProbeState - " & ulStatus
      ResetConnection usSrcPort, usDestPort, ulSeqNumber, ulAckNumber, ulSessionId
      exit sub
   end if

   '
   ' Do window probing for 3 times
   '
   ulStatus = DoZeroWindowProbe(3, usSrcPort, usDestPort, ulSessionId, ulSeqNumber, ulAckNumber)
   if (ulStatus <> 0) then
      Core.FailSev1Variation "ZeroWindowProbingWithNoData: DoZeroWindowProbe - " & ulStatus
      ResetConnection usSrcPort, usDestPort, ulSeqNumber, ulAckNumber, ulSessionId
      exit sub
   end if
   
   '
   ' Receive the data packet      
   '
   set pTCPPacket = RecvTCPPacket(ulSeqNumber, ulAckNumber, ulDataLength, TCP_ACK, 200)
   if (pTCPPacket is Nothing) then
      Core.FailSev1Variation "ZeroWindowProbingWithNoData: Data packet not rcvd"
      ResetConnection usSrcPort, usDestPort, ulSeqNumber, ulAckNumber, ulSessionId
      exit sub
   end if 
  
   Core.StartVariation
       
   '
   ' Send an ACK with a zero window
   '
   Set pTCPPacket = MakeTCPPacket(usSrcPort, usDestPort, ulSeqNumber, ulAckNumber, TCP_ACK, 0)
   pTCPPacket.TCPHeader.WindowSize = 0
   IFace.Send(pTCPPacket)
   

   '
   ' Check that no window probing is done, since there is no data to send
   '
   ulStatus = GetToWindowProbeState(usSrcPort, usDestPort, ulSessionId, ulSeqNumber, ulAckNumber)
   if (ulStatus = 0) then
      Core.FailSev1Variation "ZeroWindowProbingWithNoData: Window probing with no data to send"
      ResetConnection usSrcPort, usDestPort, ulSeqNumber, ulAckNumber, ulSessionId
      exit sub
   end if
   
   '
   ' Ask Autosrv to start sending data
   '
   ulStatus = pControllerObj.Send(ulSessionId, 1, 0, 4*usMSS, ulTID)
   if (ulStatus <> 0) then
      Core.BlockVariation "ZeroWindowProbingWithNoData: Send - " & ulStatus
      ResetConnection usSrcPort, usDestPort, ulSeqNumber, ulAckNumber, ulSessionId
      exit sub
   end if
   
   '
   ' Get to the point where the first window probe packet is received
   '
   ulStatus = GetToWindowProbeState(usSrcPort, usDestPort, ulSessionId, ulSeqNumber, ulAckNumber)
   if (ulStatus <> 0) then
      Core.FailSev1Variation "ZeroWindowProbingWithNoData: GetToWindowProbeState - " & ulStatus
      ResetConnection usSrcPort, usDestPort, ulSeqNumber, ulAckNumber, ulSessionId
      exit sub
   end if

   '
   ' Do window probing for 3 times
   '
   ulStatus = DoZeroWindowProbe(3, usSrcPort, usDestPort, ulSessionId, ulSeqNumber, ulAckNumber)
   if (ulStatus <> 0) then
      Core.FailSev1Variation "ZeroWindowProbingWithNoData: DoZeroWindowProbe - " & ulStatus
      ResetConnection usSrcPort, usDestPort, ulSeqNumber, ulAckNumber, ulSessionId
      exit sub
   end if
   
   '
   ' Complete the data exchange
   '
   ulStatus = DoDataExchange(4*usMSS, usSrcPort, usDestPort, ulSessionId, ulSeqNumber, ulAckNumber)   
   if (ulStatus <> 0) then
      Core.BlockVariation "ZeroWindowProbingWithNoData: DoDataExchange - " & ulStatus
      ResetConnection usSrcPort, usDestPort, ulSeqNumber, ulAckNumber, ulSessionId
      exit sub
   end if

   ' Reset the connection
   '
   ResetConnection usSrcPort, usDestPort, ulSeqNumber, ulAckNumber, ulSessionId

End Sub


      </script>
   </job>
</package>
